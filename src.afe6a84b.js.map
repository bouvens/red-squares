{"version":3,"sources":["constants/actionTypes.js","utils/InputCatcher.js","controllers/manual.js","controllers/still.js","controllers/random.js","utils/funcs.js","controllers/common.js","controllers/scared.js","controllers/stable.js","controllers/traveller.js","controllers/index.js","constants/game.js","reducers/game.js","constants/hero.js","reducers/hero.js","reducers/threats.js","reducers/index.js","game-logic/hero.js","game-logic/threats.js","game-logic/game.js","game-logic/index.js","actions/game.js","actions/params.js","actions/index.js","components/CanvasField.jsx","components/Sidebar.jsx","components/RedSquares.jsx","App.jsx","index.js"],"names":["INIT","SET_STATE","SPACE","InputCatcher","constructor","keymap","initialKeymap","instance","document","onmousemove","saveMousePos","window","addEventListener","process","mousePos","keyPressed","e","x","pageX","y","pageY","key","preventDefault","saveKeyPressed","keyCode","push","reactToKeys","forEach","data","fieldSize","game","redSquares","getFieldSize","left","top","state","hero","getRandomCoordinate","range","size","Math","random","target","fieldWidth","fieldHeight","isNaNumber","num","Number","isNaN","parseFloat","sign","defaultHeroPosition","saveHighestScore","score","localStorage","setItem","HIGHEST_BEATS","getHighestScore","parseInt","removeHighestScore","removeItem","SCARY_INTERVAL","VARIANTS_QUANTITY","getDistance","A","B","sqrt","getNearest","threats","reduce","nearest","threat","distance","Infinity","getSafeInterval","maxSpeed","getScaryEdges","width","height","edges","getVariants","variants","angle","PI","cos","sin","scaryEdges","nearestThreat","_","extend","newThreats","map","speed","extendedThreats","variant","best","current","setupMinDistance","safe","min","getClearest","clearest","xBest","yBest","getMinDistance","SPEEDS","Normal","Fast","Faster","DEFAULTS","frameLength","sideWidth","shadowPeriod","shadowQuantity","manager","findKey","managers","f","Traveller","heroSize","heroSpeed","threatSize","threatSpeed","threatLimit","threatAddTimeout","threatRemoveProbability","IDS","autoRestart","GAME_STATUS","play","pause","stop","BUTTON_NAMES","KEY_CODES","space","initialState","inputController","status","beats","highestBeats","outs","frame","error","action","type","types","HERO_STATUSES","normal","trouble","shadows","save","lastTime","addTimeout","index","limit","removeProbability","getHeroStatus","safeLength","some","abs","getMove","xDelta","yDelta","xMove","yMove","normalization","getShadows","length","pop","unshift","id","moveHero","max","processSpeed","canFlyAway","axis","lean","updatedThreat","isGoingOut","isOut","isAroundField","beat","newThreat","processThreat","leftBorder","rightBorder","topBorder","bottomBorder","round","ceil","moveThreats","filter","beatThreats","beatenThreats","addThreats","addedThreats","isAdded","controlThreats","newState","merge","statusUpdate","spacePress","callManager","oldState","nextPlayFrame","gameStateUpdater","processSpacePress","dispatch","getState","getWaitTime","lastFrameTime","performance","now","gameCycle","initState","updateFrame","i","setTimeout","clearHighest","init","setState","name","value","set","heroStyle","CanvasField","heroStatus","heroPos","React","PureComponent","canvas","clear","clearRect","props","drawSquare","pos","color","fillStyle","fillRect","paint","shadow","handleRefCanvas","elem","getContext","refHandler","componentDidMount","componentDidUpdate","render","style","fieldWrapper","field","propTypes","PropTypes","number","isRequired","oneOf","values","shape","arrayOf","object","string","func","extendConnection","ids","mapValues","get","mapStateToIds","invert","Sidebar","threatsLength","actions","params","Component","changeHandler","getS","side","keys","RedSquares","fieldRect","offsetLeft","offsetTop","right","clientWidth","bottom","clientHeight","handleRefField","wrapper","defaultProps","noop","App","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","reducers","thunk","querySelector"],"mappings":";AACO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,UAAA,EADA,MAAMA,EAAO,OACb,QAAA,KAAA,EAAA,MAAMC,EAAY,YAAlB,QAAA,UAAA;;AC2CJ,aAAA,IAAA,EAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5CH,MAAMC,EAAQ,IAEOC,IAAAA,GAAN,EAAA,EAAA,MAAMA,EASnBC,YAAaC,GAGPF,GAHe,EAAA,KAAA,MACdG,KAAAA,cAAgBD,EAEjBF,EAAaI,SACRJ,OAAAA,EAAaI,SAEtBJ,EAAaI,SAAW,KAExBC,SAASC,YAAc,KAAKC,aAC5BC,OAAOH,SAASI,iBAAiB,UAAW,KAAKC,WAf5CC,EAAAA,SAAW,GAEXC,EAAAA,WAAa,GAAA,EAAA,WAEpBT,KAAAA,cAAgB,GAchBI,KAAAA,aAAgBM,CAAAA,IACdb,EAAaW,SAAW,CACtBG,EAAGD,EAAEE,MACLC,EAAGH,EAAEI,SAITP,KAAAA,QAAWG,CAAAA,IA9BC,MA+BNA,EAAEK,KACJL,EAAEM,iBAECC,KAAAA,eAAeP,KAGtBO,KAAAA,eAAiB,GAAGC,QAAAA,MAClBrB,EAAaY,WAAWU,KAAKD,KAG/BE,KAAAA,YAAc,EAACrB,EAAS,KAAKC,iBAC3BH,EAAaY,WAAWY,QAASN,GAAQhB,EAAOgB,IAAQhB,EAAOgB,MAC/DlB,EAAaY,WAAa,MAC3B,GAAA,QAAA,QAAA;;ACnCF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EATD,IAAA,EAAA,EAAA,QAAA,0BASC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAPc,SAAUa,EAAAA,GACjBC,MAAAA,EAAYD,EAAKE,KAAKC,WAAWC,eAEhC,MAAA,CACLf,EAAGd,EAAaW,QAAAA,SAASG,EAAIY,EAAUI,KACvCd,EAAGhB,EAAaW,QAAAA,SAASK,EAAIU,EAAUK;;ACG1C,aAVc,SAAUC,EAAAA,GAChBA,OAAAA,EAAMC,KACT,CACAnB,EAAGkB,EAAMC,KAAKnB,EACdE,EAAGgB,EAAMC,KAAKjB,GAEd,CACAF,EAAG,EACHE,EAAG,GAER,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACKA,aAfD,SAASkB,EAAqBC,EAAOC,GAC3BC,OAAAA,KAAKC,UAAYH,EAAgB,EAAPC,GAAcA,EAGlD,IAAIG,EAEW,SAAUP,EAAAA,GAQhBO,QAPFA,GAAWP,EAAMC,KAAKnB,IAAMyB,EAAOzB,GAAKkB,EAAMC,KAAKjB,IAAMuB,EAAOvB,KACnEuB,EAAS,CACPzB,EAAGoB,EAAoBF,EAAML,KAAKa,WAAYR,EAAMC,KAAKG,MACzDpB,EAAGkB,EAAoBF,EAAML,KAAKc,YAAaT,EAAMC,KAAKG,QAIvDG,EACR,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACkBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,KAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,yBAAA,EAjCD,IAAA,EAAA,QAAA,qBAEO,SAASG,EAAYC,GACnBC,OAAAA,OAAOC,MAAMC,WAAWH,IAG1B,SAASI,EAAMJ,GAChBA,OAAQ,IAARA,GAAaD,EAAWC,GACnBA,EAGFA,EAAM,EAAI,GAAK,EAGjB,MAAMK,EAAsB,CAACrB,EAAMS,KAAU,CAClDtB,GAAIa,EAAKa,WAAaJ,GAAQ,EAC9BpB,GAAIW,EAAKc,YAAcL,GAAQ,IAG1B,SAASa,EAAkBC,GAChCC,aAAaC,QACXC,EADF,cAEEH,GAIG,SAASI,IACRJ,MAAAA,EAAQC,aAAaE,EAAD,eACnBH,OAAAA,EAAQK,SAASL,EAAO,IAAM,EAGhC,SAASM,IACdL,aAAaM,WAAWJ,EAAxB,eACD,QAAA,oBAAA;;AC0BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAAA,QAAA,YAAA,EAAA,QAAA,gBAAA,QAAA,WAAA,QAAA,kBAAA,QAAA,oBAAA,EA3DM,MAAMK,EAAiB,EAAI,EA2DjC,QAAA,eA3D6B,EAAI,EAC3B,MAAMC,EAAoB,GA0DhC,QAAA,kBAAA,EAxDD,MAAMC,EAAc,CAACC,EAAGC,IAAMzB,KAAK0B,KAAK,KAAEF,IAAAA,EAAE/C,EAAIgD,EAAEhD,EAAM,GAAO+C,KAAAA,IAAAA,EAAE7C,EAAI8C,EAAE9C,EAAM,IAEhEgD,EAAa,EAAGlD,EAAAA,EAAGE,EAAAA,GAAKiD,IAAYA,EAAQC,OAAO,CAACC,EAASC,KAClEC,MAAAA,EAAWT,EAAY,CAAE9C,EAAAA,EAAGE,EAAAA,GAAKoD,GACnC,OAACD,EAAQC,QAAUD,EAAQE,SAAWA,EACjC,CACLD,OAAAA,EACAC,SAAAA,GAIGF,GACN,CACDC,OAAQ,KACRC,SAAUC,EAAAA,IA0CX,QAAA,WAAA,EAvCM,MAAMC,EAAkB,CAACtC,EAAMgC,KACpChC,EAAKG,KAAO6B,EAAQ7B,KAAOH,EAAKuC,SAAWP,EAAQO,WArBvB,EAAI,GAwB3B,SAASC,EAAexC,EAAMG,EAAMsC,EAAOC,GAC1CC,MAAAA,EAAQ,IACR,EAAE9D,EAAF,EAAKE,GAAMiB,EAoBV2C,OAlBPA,EAAMtD,KAAK,CACTR,EAAAA,EACAE,EAAW,KAAPoB,IAENwC,EAAMtD,KAAK,CACTR,EAAAA,EACAE,EAAG2D,EAAiB,IAAPvC,IAGfwC,EAAMtD,KAAK,CACTR,EAAW,KAAPsB,EACJpB,EAAAA,IAEF4D,EAAMtD,KAAK,CACTR,EAAG4D,EAAgB,IAAPtC,EACZpB,EAAAA,IAGK4D,EAGF,SAASC,EAAa5C,GACrB6C,MAAAA,EAAW,GACZ,IAAA,IAAIC,EAAQ,EAAGA,EAAkB,EAAV1C,KAAK2C,GAAQD,GAAoB,EAAV1C,KAAK2C,GAAUrB,EAChEmB,EAASxD,KAAK,CACZR,EAAGmB,EAAKnB,EAAKuB,KAAK4C,IAAIF,GAAS9C,EAAKuC,SACpCxD,EAAGiB,EAAKjB,EAAKqB,KAAK6C,IAAIH,GAAS9C,EAAKuC,WAIjCM,OAAAA,EACR,QAAA,gBAAA;;ACrCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAtBD,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,kBACA,EAAA,QAAA,YAoBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAlBc,SAAU,GAAA,KAAEnD,EAAF,KAAQM,EAAR,QAAcgC,IAC/BkB,MAAAA,GAAa,EAAclD,EAAAA,eAAAA,EAAM,EAAIgC,EAAQ7B,KAAMT,EAAKa,WAAYb,EAAKc,aAEzE2C,GAAgB,EAAWnD,EAAAA,YAAAA,EAAMoD,EAAEC,QAAAA,OAAOH,EAAYlB,EAAQA,UAEhE,IAACmB,EAAchB,QAAUgB,EAAcf,SAA4C,GAAjC,EAAgBpC,EAAAA,iBAAAA,EAAMgC,GACnE,OAAA,EAAoBtC,EAAAA,qBAAAA,EAAMM,EAAKG,MAGlCiC,MAAAA,EACDpC,EAAKnB,EAAIsE,EAAchB,OAAOtD,EAD7BuD,EAEDpC,EAAKjB,EAAIoE,EAAchB,OAAOpD,EAG5B,MAAA,CACLF,EAAGmB,EAAKnB,EAAIuD,EACZrD,EAAGiB,EAAKjB,EAAIqD;;ACsBf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA1CD,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,kBACA,EAAA,QAAA,YAwCC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtCc,SAAU,GAAA,KAAE1C,EAAF,KAAQM,EAAR,QAAcgC,IAC/BkB,MAAAA,GAAa,EAAclD,EAAAA,eAAAA,EAAM,EAAIgC,EAAQ7B,KAAMT,EAAKa,WAAYb,EAAKc,aACzE8C,EAAatB,EAAQA,QAAQuB,IAAKpB,IACtC,CACEtD,EAAGsD,EAAOtD,EAAIsD,EAAOqB,MAAM3E,EAC3BE,EAAGoD,EAAOpD,EAAIoD,EAAOqB,MAAMzE,KAGzB0E,EAAkBL,EAAEC,QAAAA,OAAOH,EAAYI,GAEvCH,GAAgB,EAAWnD,EAAAA,YAAAA,EAAMyD,GAEnC,IAACN,EAAchB,QAAUgB,EAAcf,UAAW,EAAgBpC,EAAAA,iBAAAA,EAAMgC,GACnE,OAAA,EAAoBtC,EAAAA,qBAAAA,EAAMM,EAAKG,MAGlCuD,MAAAA,GAAU,EAAY1D,EAAAA,aAAAA,GAAMiC,OAAO,CAAC0B,EAAMC,KACxC,MAAA,SAAExB,IAAa,EAAWwB,EAAAA,YAAAA,EAASH,GAErCrB,OAAAA,EAAWuB,EAAKvB,SACX,CACLvD,EAAG+E,EAAQ/E,EACXE,EAAG6E,EAAQ7E,EACXqD,SAAAA,GAIGuB,GACN,CACD9E,EAAGmB,EAAKnB,EACRE,EAAGiB,EAAKjB,EACRqD,SAAUe,EAAcf,WAGnB,MAAA,CACLvD,EAAG6E,EAAQ7E,EACXE,EAAG2E,EAAQ3E;;AC8Bd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAtED,IAAA,EAAA,QAAA,YAEA,MAAM8E,EAAmB,CAACtD,EAAYC,EAAasD,IAAS,EAAGjF,EAAAA,EAAGE,EAAAA,GAAKiD,IAAY5B,KAAK2D,KACtF,EAAW,EAAA,YAAA,CAAElF,EAAAA,EAAGE,EAAAA,GAAKiD,GAASI,SAC9BvD,EAAIiF,EACHvD,EAAauD,EAAQjF,EACtBE,EAAI+E,EACHtD,EAAcsD,EAAQ/E,GAGzB,SAASiF,EAAaF,EAAMvD,EAAYC,EAAawB,GAC/CiC,IACAC,EACAC,EAFAF,EAAW,EAGTG,MAAAA,EAAiBP,EAAiBtD,EAAYC,EAAasD,GAE5D,IAAA,IAAIjF,EAAIiF,EAAMjF,EAAI0B,EAAauD,EAAMjF,GAAKiF,EACxC,IAAA,IAAI/E,EAAI+E,EAAM/E,EAAIyB,EAAcsD,EAAM/E,GAAK+E,EAAM,CAC9C1B,MAAAA,EAAWgC,EAAe,CAAEvF,EAAAA,EAAGE,EAAAA,GAAKiD,GAEtCI,EAAW6B,IACbA,EAAW7B,EACX8B,EAAQrF,EACRsF,EAAQpF,GAKP,MAAA,CACLF,EAAGqF,EACHnF,EAAGoF,GAIQ,SAAU,GAAA,KAAEzE,EAAF,KAAQM,EAAR,QAAcgC,IAC/BsB,MAAAA,EAAatB,EAAQA,QAAQuB,IAAKpB,IAAY,CAClDtD,EAAGsD,EAAOtD,EAAIsD,EAAOqB,MAAM3E,EAC3BE,EAAGoD,EAAOpD,EAAIoD,EAAOqB,MAAMzE,KAGvB+E,EAAO9D,EAAKG,KAAO6B,EAAQ7B,KAC3BiE,EAAiBP,EAAiBnE,EAAKa,WAAYb,EAAKc,YAAasD,GACrE5B,EAAUkC,EAAepE,EAAMsD,GAEjCpB,GAAAA,GAAU,EAAgBlC,EAAAA,iBAAAA,EAAMgC,GAC3BgC,OAAAA,EAAYF,EAAMpE,EAAKa,WAAYb,EAAKc,YAAa8C,GAGxDI,MAAAA,GAAU,EAAY1D,EAAAA,aAAAA,GAAMiC,OAAO,CAAC0B,EAAMC,KACxCxB,MAAAA,EAAWgC,EAAeR,EAASN,GAErClB,OAAAA,EAAWuB,EAAKvB,SACX,CACLvD,EAAG+E,EAAQ/E,EACXE,EAAG6E,EAAQ7E,EACXqD,SAAAA,GAIGuB,GACN,CACD9E,EAAGmB,EAAKnB,EACRE,EAAGiB,EAAKjB,EACRqD,SAAUF,IAGL,MAAA,CACLrD,EAAG6E,EAAQ7E,EACXE,EAAG2E,EAAQ3E;;AC/Df,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,QAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,QAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,YAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WALA,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACiDO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,aAAA,QAAA,YAAA,QAAA,cAAA,QAAA,IAAA,QAAA,SAAA,QAAA,YAAA,EAtDP,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,mBAqDO,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAnDA,MAAMsF,EAAS,CACpBC,OAAQ,SACRC,KAAM,OACNC,OAAQ,UAgDH,QAAA,OAAA,EA7CA,MAAMC,EAAW,CACtBC,YAAa,GACbnE,WAAY,IACZC,YAAa,IACbmE,UAAW,IACXC,aAAc,EACdC,eAAgB,GAChBrB,MAAOa,EAAOE,KACdO,QAAS1B,EAAE2B,QAAAA,QAAQC,EAAWC,GAAMA,IAAMD,EAASE,WACnDC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,YAAa,EACbC,YAAa,GACbC,iBAAkB,IAClBC,wBAAyB,GA8BpB,QAAA,SAAA,EA3BA,MAAMC,EAAM,CACjBC,YAAa,mBACbnC,MAAO,aACPsB,QAAS,eACTK,SAAU,YACVC,UAAW,gBACXC,WAAY,eACZC,YAAa,mBACbC,YAAa,gBACbC,iBAAkB,qBAClBC,wBAAyB,6BAiBpB,QAAA,IAAA,EAdA,MAAMrE,EAAgB,eActB,QAAA,cAAA,EAZA,MAAMwE,EAAc,CACzBC,KAAM,OACNC,MAAO,QACPC,KAAM,QASD,QAAA,YAAA,EANA,MAAMC,EAAe,CACzBJ,CAAAA,EAAYC,MAAO,QACnBD,CAAAA,EAAYE,OAAQ,SACpBF,CAAAA,EAAYG,MAAO,SAGf,QAAA,aAAA,EAAA,MAAME,EAAY,CACvBC,MAAO,IADF,QAAA,UAAA;;ACzBN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA7BD,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,6BACA,EAAA,QAAA,qBA2BC,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAzBD,MAAMC,EAAe,CACnBxG,WAAY,KACZyG,gBAAiB,KACjBtB,QAASL,EAASK,SAAAA,QAClBuB,OAAQT,EAAYG,YAAAA,KACpBJ,aAAa,EACbW,MAAO,EACPC,aAAc,EACdC,KAAM,EACNC,MAAO,EACPjD,MAAOiB,EAASjB,SAAAA,MAChBjD,WAAYkE,EAASlE,SAAAA,WACrBC,YAAaiE,EAASjE,SAAAA,YACtBkG,MAAO,IAGM,SAAU3G,EAAAA,EAAQoG,EAAcQ,GACrCA,OAAAA,EAAOC,MACRC,KAAAA,EAAMjJ,KACFwF,OAAAA,EAAEC,QAAAA,OAAO,GAAItD,EAAO4G,EAAOnH,MAC/BqH,KAAAA,EAAMhJ,UACFuF,OAAAA,EAAEC,QAAAA,OAAO,GAAItD,EAAO4G,EAAOnH,KAAKE,MACzC,QACSK,OAAAA;;AC3BN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,MAAM+G,EAAgB,CAC3BC,OAAQ,SACRC,QAAS,WAFJ,QAAA,cAAA;;AC2BN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA3BD,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,6BACA,EAAA,QAAA,qBACA,EAAA,QAAA,qBACA,EAAA,QAAA,kBAuBC,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GArBD,MAAMb,EACD,EAAA,IAAA,EAAoB1B,EAAAA,qBAAAA,EAApB,SAA8BA,EAASU,SAAAA,UAD1B,CAEhB5C,SAAUkC,EAASW,SAAAA,UACnBiB,OAAQS,EAAcC,cAAAA,OACtB5G,KAAMsE,EAASU,SAAAA,SACfP,aAAcH,EAASG,SAAAA,aACvBC,eAAgBJ,EAASI,SAAAA,eACzBoC,QAAS,GACT3G,OACK,EAAA,IAAA,EAAoBmE,EAAAA,qBAAAA,EAApB,SAA8BA,EAASU,SAAAA,UADtC,CAEJ+B,KAAM,OAIK,SAAUnH,EAAAA,EAAQoG,EAAcQ,GACrCA,OAAAA,EAAOC,MACRC,KAAAA,EAAMhJ,UACFuF,OAAAA,EAAEC,QAAAA,OAAO,GAAItD,EAAO4G,EAAOnH,KAAKQ,MACzC,QACSD,OAAAA;;ACHZ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAtBD,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,6BACA,EAAA,QAAA,qBAoBC,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAlBD,MAAMoG,EAAe,CACnBnE,QAAS,GACT7B,KAAMsE,EAASY,SAAAA,WACf9C,SAAUkC,EAASa,SAAAA,YACnB6B,SAAU,EACVC,WAAY3C,EAASe,SAAAA,iBACrB6B,MAAO,EACPC,MAAO7C,EAASc,SAAAA,YAChBgC,kBAAmB9C,EAASgB,SAAAA,yBAGf,SAAU1F,EAAAA,EAAQoG,EAAcQ,GACrCA,OAAAA,EAAOC,MACRC,KAAAA,EAAMhJ,UACFuF,OAAAA,EAAEC,QAAAA,OAAO,GAAItD,EAAO4G,EAAOnH,KAAKwC,SACzC,QACSjC,OAAAA;;AClBb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,OAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,OAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAFA,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,cAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;AC6EC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EA/ED,IAAA,EAAA,QAAA,qBACA,EAAA,QAAA,qBA8EC,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GA5ED,MAAMyH,EAAgB,CAAC3I,EAAGE,EAAGoG,EAAUE,EAAYrD,KAC3CyF,MAAAA,EAAatC,EAAWE,EAE1BrD,OAAAA,EAAQ0F,KAAMvF,GAAW/B,KAAKuH,IAAIxF,EAAOtD,EAAIA,GAAK4I,GAAcrH,KAAKuH,IAAIxF,EAAOpD,EAAIA,GAAK0I,GACpFX,EAAcE,cAAAA,QAGhBF,EAAcC,cAAAA,QAGvB,SAASa,EAAS5H,EAAMM,GAChBuH,MAAAA,EAASvH,EAAOzB,EAAImB,EAAKnB,EACzBiJ,EAASxH,EAAOvB,EAAIiB,EAAKjB,EACzBqD,EAAWhC,KAAK0B,KAAK,KAAC+F,IAAAA,EAAU,GAAMC,KAAAA,IAAAA,EAAU,IAElD1F,GAAAA,GAAYpC,EAAKuC,SACZ,MAAA,CACLwF,MAAOF,EACPG,MAAOF,GAILG,MAAAA,EAAgB7F,EAAWpC,EAAKuC,SAE/B,MAAA,CACLwF,MAAOF,EAASI,EAChBD,MAAOF,EAASG,GAIpB,SAASC,GAAY,KAAExI,EAAMM,MAAM,QAAEiH,EAAF,aAAWrC,EAAX,eAAyBC,EAAzB,EAAyChG,EAAzC,EAA4CE,KAatEkI,OAZDvH,EAAK+G,MAAQ7B,IACbqC,EAAQkB,SAAWtD,GACrBoC,EAAQmB,MAGVnB,EAAQoB,QAAQ,CACdxJ,EAAAA,EACAE,EAAAA,EACAuJ,GAAIrB,EAAQkB,OAASlB,EAAQ,GAAGqB,GAAK,EAAI,KAItCrB,EAGF,SAASsB,EAAUxI,GAClB,MAAA,KAAEL,EAAF,KAAQM,EAAMgC,SAAS,QAAEA,IAAcjC,EACvCsF,EAAatF,EAAMiC,QAAQ7B,MAE3B,MAAE4H,EAAF,MAASC,GAAUJ,EAAQ5H,EAAMA,EAAKM,QAExCzB,IAAAA,EAAImB,EAAKnB,EAAIkJ,EACjBlJ,EAAIuB,KAAKoI,IAAI3J,EAAGmB,EAAKG,MACrBtB,EAAIuB,KAAK2D,IAAIlF,EAAGa,EAAKa,WAAaP,EAAKG,MAEnCpB,IAAAA,EAAIiB,EAAKjB,EAAIiJ,EACjBjJ,EAAIqB,KAAKoI,IAAIzJ,EAAGiB,EAAKG,MACrBpB,EAAIqB,KAAK2D,IAAIhF,EAAGW,EAAKc,YAAcR,EAAKG,MAElCkG,MAAAA,EAASmB,EAAc3I,EAAGE,EAAGiB,EAAKG,KAAMkF,EAAYrD,GAGrDjC,OAAAA,EAAAA,GAAAA,EADL,CAEEL,KACKK,EAAAA,GAAAA,EAAML,KADP,CAEF2G,OAAQA,IAAWS,EAAcC,cAAAA,OAASnB,EAAYC,YAAAA,KAAOD,EAAYG,YAAAA,OAE3E/F,KACKD,EAAAA,GAAAA,EAAMC,KADP,CAEFnB,EAAAA,EACAE,EAAAA,EACAsH,OAAAA,EACAY,QAASiB,EAAWnI;;AC6FzB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAzKD,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,kBACA,EAAA,QAAA,qBAuKC,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GArKD,MAAM0I,EAAe,CAACtG,EAAQhC,EAAMuI,IAAe,CAACC,EAAMC,KAClDC,MAAAA,EAAqB1G,EAAAA,GAAAA,GAepB0G,OAbPA,EAAcC,YAAa,EAAKF,EAAAA,MAAAA,MAAU,EAAKC,EAAAA,MAAAA,EAAcrF,MAAMmF,IAE9DE,EAAcE,QACbL,GAAcG,EAAcC,WAC9BD,EAAcE,OAAQ,EAEtBF,EAAcrF,MAAMmF,IAASE,EAAcC,YAAc,EAAI,IAAMD,EAAcrF,MAAMmF,IAAS,IAGhGvI,KAAKuH,IAAIiB,GAAe,EAAPzI,IACnB0I,EAAcG,eAAgB,GAGzBH,GAGHI,EAAO,CACX1B,EACApH,EACAI,EACAC,IACI2B,IACA+G,IAAAA,EAAiB/G,EAAAA,GAAAA,GACfuG,MAAAA,EAAatI,KAAKC,SAAW,EAAIkH,EACjC4B,EAAgBV,EAAaS,EAAW/I,EAAMuI,GAE9CU,EAAajJ,EACf+I,EAAUrK,EAAIuK,IAChBF,EAAYC,EAAc,IAAKD,EAAUrK,EAAIuK,IAEzCC,MAAAA,EAAc9I,EAAaJ,EAC7B+I,EAAUrK,EAAIwK,IAChBH,EAAYC,EAAc,IAAKD,EAAUrK,EAAIwK,IAGzCC,MAAAA,EAAYnJ,EACd+I,EAAUnK,EAAIuK,IAChBJ,EAAYC,EAAc,IAAKD,EAAUnK,EAAIuK,IAEzCC,MAAAA,EAAe/I,EAAcL,EAK5B+I,OAJHA,EAAUnK,EAAIwK,IAChBL,EAAYC,EAAc,IAAKD,EAAUnK,EAAIwK,IAGxCL,GAGHA,EAAY,CAAC/I,EAAMkH,EAAO9G,EAAYC,EAAa+B,KACjDqG,MAAAA,EAAc,EAAPzI,EACTtB,IAAAA,EAAIuB,KAAKoJ,MAAMpJ,KAAKC,UAAYE,EAAaqI,IAC7C7J,EAAI,EAAI6J,EACRpF,EAAQ,CACV3E,EAAGuB,KAAKoJ,OAAwB,EAAhBpJ,KAAKC,SAAgB,GAAKkC,GAC1CxD,EAAGqB,KAAKqJ,KAAKrJ,KAAKC,SAAWkC,IAmBxB,OAhBHnC,KAAKC,SAAW,IAClBxB,EAAI,EAAI+J,EACR7J,EAAIqB,KAAKoJ,MAAMpJ,KAAKC,UAAYG,EAAcoI,IAC9CpF,EAAQ,CACN3E,EAAGuB,KAAKqJ,KAAKrJ,KAAKC,SAAWkC,GAC7BxD,EAAGqB,KAAKoJ,OAAwB,EAAhBpJ,KAAKC,SAAgB,GAAKkC,IAGxCnC,KAAKC,SAAW,KAClBxB,EAAI0B,EACJiD,EAAM3E,IAAM,IAELuB,KAAKC,SAAW,KACzBtB,EAAIyB,EACJgD,EAAMzE,IAAM,GAEP,CACLuJ,GAAIjB,EACJxI,EAAAA,EACAE,EAAAA,EACAyE,MAAAA,EACAuF,OAAO,EACPC,eAAe,IAInB,SAASU,GAAa,QAAE1H,EAAF,kBAAWuF,EAAX,KAA8BpH,GAAQI,EAAYC,GAC/DwB,OAAAA,EACJuB,IAAKpB,GACDA,EAAAA,GAAAA,EADA,CAEHtD,EAAGsD,EAAOtD,EAAIsD,EAAOqB,MAAM3E,EAC3BE,EAAGoD,EAAOpD,EAAIoD,EAAOqB,MAAMzE,KAE5BwE,IAAI0F,EACH1B,EACApH,EACAI,EACAC,IAEDmJ,OAAQxH,GAAWA,EAAO6G,eAG/B,SAASY,EAAatG,GAChBgD,IAAAA,EAAQ,EAEL,MAAA,CACLuD,cAAevG,EAAWC,IAAKpB,IACvB0G,MAAAA,EAAqB1G,EAAAA,GAAAA,GAMpB0G,OAJHA,EAAcC,aAAeD,EAAcE,QAC7CzC,GAAS,SACFuC,EAAcC,YAEhBD,GACN,GACHvC,MAAAA,GAIJ,SAASwD,GAAY,WAAExG,EAAF,QAActB,EAAd,MAAuByE,EAAvB,WAA8BlG,EAA9B,YAA0CC,EAA1C,YAAuDkE,IACpEqF,MAAAA,EAAe,IAAIzG,GACrB0G,IAAAA,GAAU,EAWP,OAVH1G,EAAW6E,OAASnG,EAAQsF,OAASb,GAASzE,EAAQmF,SAAYnF,EAAQoF,WAAa1C,IACzFqF,EAAa1K,KAAK6J,EAChBlH,EAAQ7B,KACR6B,EAAQqF,MACR9G,EACAC,EACAwB,EAAQO,WAEVyH,GAAU,GAEL,CAAED,aAAAA,EAAcC,QAAAA,GAGlB,SAASC,EAAgBlK,GACxB,MAAA,QAAEiC,EAAStC,MAAM,MAAE+G,EAAF,WAASlG,EAAT,YAAqBC,IAAkBT,GACxD,YAAE2E,GAAgBD,EAAxB,SAEInB,IAAAA,EAAaoG,EAAY1H,EAASzB,EAAYC,GAC5CgG,MAAAA,EAAOxE,EAAQA,QAAQmG,OAAS7E,EAAW6E,QAE3C,cAAE0B,EAAF,MAAiBvD,GAAUsD,EAAYtG,GAC7CA,EAAauG,EAEP,MAAA,aAAEE,EAAF,QAAgBC,GAAYF,EAChC,CAAExG,WAAAA,EAAYtB,QAAAA,EAASyE,MAAAA,EAAOlG,WAAAA,EAAYC,YAAAA,EAAakE,YAAAA,IAEzDpB,EAAayG,EAEPG,MAAAA,EAAW9G,EAAE+G,QAAAA,MAAM,GAAIpK,EAAO,CAClCL,KAAM,CACJ4G,MAAOvG,EAAML,KAAK4G,MAAQA,EAC1BE,KAAMzG,EAAML,KAAK8G,KAAOA,GAE1BxE,QAASgI,EACL,CACA7C,SAAUV,EACVY,MAAOrF,EAAQqF,MAAQ,GAEvBrF,IAKCkI,OAFPA,EAASlI,QAAQA,QAAUsB,EAEpB4G;;AC5ER,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EAAA,QAAA,iBAAA,EA5FD,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,SACA,EAAA,EAAA,QAAA,mBACA,EAAA,QAAA,qBACA,EAAA,QAAA,kBACA,EAAA,QAAA,UACA,EAAA,QAAA,aAsFC,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApFD,MAAME,EAAe,CAACrK,EAAOsG,IAAWjD,EAAE+G,QAAAA,MAAM,GAAIpK,EAAO,CACzDL,KAAM,CACJ2G,OAAAA,KAIG,SAASgE,EAAYtK,GAClBA,OAAAA,EAAML,KAAK2G,QACZT,KAAAA,EAAYC,YAAAA,KACRuE,OAAAA,EAAarK,EAAO6F,EAAYE,YAAAA,OACpCF,KAAAA,EAAYE,YAAAA,MACRsE,OAAAA,EAAarK,EAAO6F,EAAYC,YAAAA,MACpCD,KAAAA,EAAYG,YAAAA,KACjB,QAGOhG,OAAAA,EAAAA,GAAAA,EADL,CAEEL,KACKK,EAAAA,GAAAA,EAAML,KADP,CAEF2G,OAAQT,EAAYC,YAAAA,KACpBS,MAAO,EACPE,KAAM,EACNC,MAAO,EACPC,MAAO,KAET1G,KACKD,EAAAA,GAAAA,EAAMC,MACN,EAAoBD,EAAAA,qBAAAA,EAAML,KAAMK,EAAMC,KAAKG,OAEhD6B,QACKjC,EAAAA,GAAAA,EAAMiC,QADJ,CAELA,QAAS,GACTmF,UAAWpH,EAAMiC,QAAQoF,WAAa3C,EAASC,SAAAA,iBAMzD,SAAS4F,EAAaC,GACdxK,MAAAA,EAAQqD,EAAE+G,QAAAA,MAAM,GAAII,EAAU,CAClCvK,KAAM,CACJM,OAAQ0E,EAASuF,EAAS7K,KAAKoF,SAASyF,MAYrCxK,QATH,EAAWA,EAAAA,YAAAA,EAAMC,KAAKM,OAAOzB,KAAM,EAAWkB,EAAAA,YAAAA,EAAMC,KAAKM,OAAOvB,MAClEgB,EAAML,KAAKgH,MAAQ,aACnB3G,EAAMC,KAAKM,OACNP,EAAAA,GAAAA,EAAMC,KAAKM,OADhB,CAEEzB,EAAGkB,EAAMC,KAAKnB,EACdE,EAAGgB,EAAMC,KAAKjB,KAIXgB,EAGT,SAAST,EAAaiL,GAChBxK,IAAAA,EAAawK,EAAAA,GAAAA,GAaVxK,OAXHA,EAAML,KAAK2G,SAAWT,EAAYG,YAAAA,MAAQhG,EAAML,KAAKiG,YAEvD5F,EAAQsK,EADRtK,EAAQuK,EAAYvK,IAGpBA,EAAML,KAAK0G,gBAAgB9G,YAAY,CACpC2G,CAAAA,EAAUC,UAAAA,OAAQ,KACjBnG,EAAQsK,EAAWtK,MAKlBA,EAGT,MAAMyK,GAAgB,EAAQP,EAAAA,SAAAA,EAAR,eAAwBK,EAAa/B,EAArC,UAEf,SAASkC,EAAkBF,GAC5BxK,IAAAA,EAAQT,EAAYiL,GAOjBxK,OALHA,EAAML,KAAK2G,SAAWT,EAAYC,YAAAA,QACpC9F,EAAQyK,EAAczK,IAChBL,KAAK+G,OAAS,GAGf1G;;ACzFT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFA,IAAA,EAAA,QAAA,UAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,GAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,QACA,IAAA,EAAA,QAAA,UAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,GAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,QACA,IAAA,EAAA,QAAA,aAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,GAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA;;ACgFC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,QAAA,aAAA,EAAA,QAAA,KAAA,EAlFD,IAAA,EAAA,EAAA,QAAA,6BACA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,iBACA,EAAA,QAAA,kBA8EC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EA5EM,SAAS2K,IACP,MAAA,CAACC,EAAUC,KAChBD,EAAS,CACP/D,KAAMC,EAAMhJ,UACZ2B,MAAM,EAAWoL,EAAAA,YAAAA,QAKvB,MAAMC,EAAc,CAAC9K,EAAO+K,IAAkB1K,KAAKoI,IAChDsC,EAAgBrG,EAASC,SAAAA,YAAeqG,YAAYC,MACrD,GAGIC,EAAaC,IACXnL,MAAAA,GAAQ,EAAiBmL,EAAAA,kBAAAA,GAOxBnL,OALHA,EAAML,KAAK2G,SAAWT,EAAYG,YAAAA,MAAQmF,EAAUxL,KAAK2G,SAAWT,EAAYC,YAAAA,OAClF9F,EAAML,KAAK6G,aAAenG,KAAKoI,IAAIzI,EAAML,KAAK4G,MAAOvG,EAAML,KAAK6G,eAC/CxG,EAAAA,EAAAA,kBAAAA,EAAML,KAAK6G,eAGvBxG,GAGT,SAASoL,EAAaR,EAAUC,EAAUE,GACjC,MAAA,KACCI,MAAAA,EAAYN,IACd7K,IAAAA,EAAQkL,EAAUC,GAElBnL,GAAAA,EAAML,KAAK8D,QAAUa,EAAOG,OAAAA,OACzB,IAAA,IAAI4G,EAAI,EAAGA,GAAK,IAAKA,GAAK,EAC7BrL,EAAQkL,EAAUlL,GAIlBA,EAAML,KAAK2G,SAAWT,EAAYC,YAAAA,MAAQqF,EAAUxL,KAAK2G,SAAWT,EAAYC,YAAAA,MAClF8E,EAAS,CACP/D,KAAMC,EAAMhJ,UACZ2B,KAAMO,IAIVsL,WACEF,EAAYR,EAAUC,EAAUG,YAAYC,OAC5CjL,EAAML,KAAK8D,QAAUa,EAAOC,OAAAA,OAASuG,EAAY9K,EAAO+K,GAAiB,IAKxE,SAASQ,IACNX,OAAAA,KACN,EAAA,EAAA,sBAEAA,EAAS,CACP/D,KAAMC,EAAMjJ,KACZ4B,KAAM,CACJ+G,aAAc,MAMf,SAASgF,EAAM5L,GACb,MAAA,CAACgL,EAAUC,KAChBD,EAAS,CACP/D,KAAMC,EAAMjJ,KACZ4B,KAAM,CACJG,WAAAA,EACAyG,gBAAiB,IAAIrI,EAAJ,QACjBwI,cAAc,EAAA,EAAA,sBAIlB4E,EAAYR,EAAUC,EAAtBO;;AC7EG,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAHP,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,6BAEO,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,MAAMK,EAAW,CAACC,EAAMC,KAAW,CACxC9E,KAAMC,EAAMhJ,UACZ2B,KAAM4D,EAAEuI,QAAAA,IAAI,GAAIF,EAAMC,KAFjB,QAAA,SAAA;;ACFP,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,UAAA,EADA,IAAA,EAAA,EAAA,QAAA,WACA,QAAA,KAAA,EAAA,IAAA,EAAA,EAAA,QAAA,aAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,QAAA,OAAA;;;;AC4BqB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA7BrB,IA6BqB,EAAA,EAAA,EAAA,EA7BrB,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,eACA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,sBAwBqB,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtBrB,MAAME,EAAY,CACf9E,CAAAA,EAAcC,cAAAA,QAAS,mBACvBD,CAAAA,EAAcE,cAAAA,SAAU,oBAmBN6E,IAAAA,GAhBpB,GAAA,EACE9L,EAAAA,SAAAA,IAAW,CACVQ,WAAYR,EAAML,KAAKa,WACvBC,YAAaT,EAAML,KAAKc,YACxBsL,WAAY/L,EAAMC,KAAKqG,OACvBlB,SAAUpF,EAAMC,KAAKG,KACrB4L,QAAS,CACPlN,EAAGkB,EAAMC,KAAKnB,EACdE,EAAGgB,EAAMC,KAAKjB,GAEhBsG,WAAYtF,EAAMiC,QAAQ7B,KAC1B6B,QAASjC,EAAMiC,QAAQA,QACvBiF,QAASlH,EAAMC,KAAKiH,QACpBP,MAAO3G,EAAML,KAAKgH,WAGP,EAAA,EAAA,cAA0BsF,EAAMC,QAAAA,cAAc,eAAA,GAAA,IAAA,EAiB3DC,OAAAA,EAAAA,SAAAA,GAAAA,KAAAA,OAAS,KAUTC,KAAAA,MAAQ,MACDD,KAAAA,OAAOE,UAAU,EAAG,EAAG,KAAKC,MAAM9L,WAAY,KAAK8L,MAAM7L,eAGhE8L,KAAAA,WAAa,GAAGC,IAAAA,EAAKpM,KAAAA,EAAMqM,MAAAA,MACpBN,KAAAA,OAAOO,UAAYD,EACnBN,KAAAA,OAAOQ,SACVtM,KAAKoJ,MAAM+C,EAAI1N,EAAIsB,GACnBC,KAAKoJ,MAAM+C,EAAIxN,EAAIoB,GACZ,EAAPA,EACO,EAAPA,KAIJwM,KAAAA,MAAQ,MACDR,KAAAA,QAEAE,KAAAA,MAAMpF,QAAQ1H,QAAQ,CAACqN,EAAQvF,IAAU,KAAKiF,WAAW,CAC5DC,IAAK,KAAKF,MAAMpF,QAAQI,GACxBlH,KAAM,KAAKkM,MAAMlH,SACjBqH,4BAA8B,KAAKH,MAAMpF,QAAQkB,OAASd,EAAQ,GAAK,KAAKgF,MAAMpF,QAAQkB,OAAU,SAEjGmE,KAAAA,WAAW,CACdC,IAAK,KAAKF,MAAMN,QAChB5L,KAAM,KAAKkM,MAAMlH,SACjBqH,MAAOZ,EAAU,KAAKS,MAAMP,cAEzBO,KAAAA,MAAMrK,QAAQzC,QAAS4C,GAC1B,KAAKmK,WAAW,CACdC,IAAKpK,EACLhC,KAAM,KAAKkM,MAAMhH,WACjBmH,MAAO,0BAKbK,KAAAA,gBAAmBC,CAAAA,IACZZ,KAAAA,OAASY,EAAKC,WAAW,MACzBV,KAAAA,MAAMW,WAAWF,KAjEmC,EAmB3DG,oBACON,KAAAA,QAGPO,qBACOP,KAAAA,QA4CPQ,SAEI,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAWC,EAAMC,QAAAA,cACpB,EAAA,QAAA,cAAA,SAAA,CACE,UAAWD,EAAME,QAAAA,MACjB,IAAK,KAAKT,gBACV,MAAO,KAAKR,MAAM9L,WAClB,OAAQ,KAAK8L,MAAM7L,aAElB,sCAEH,EAAA,QAAA,cAAA,MAAA,CAAK,UAAW4M,EAAM1G,QAAAA,OAAQ,KAAK2F,MAAM3F,UA9ExC6G,EAAAA,UAAY,CACjBhN,WAAYiN,EAAUC,QAAAA,OAAOC,WAC7BlN,YAAagN,EAAUC,QAAAA,OAAOC,WAC9B5B,WAAY0B,EAAUG,QAAAA,MAAMvK,EAAEwK,QAAAA,OAAO9G,EAAT,gBAAyB4G,WACrDvI,SAAUqI,EAAUC,QAAAA,OAAOC,WAC3B3B,QAASyB,EAAUK,QAAAA,MAAM,CACvBhP,EAAG2O,EAAUC,QAAAA,OACb1O,EAAGyO,EAAUC,QAAAA,SACZC,WACHrI,WAAYmI,EAAUC,QAAAA,OAAOC,WAC7B1L,QAASwL,EAAUM,QAAAA,QAAQN,EAAUO,QAAAA,QAAQL,WAC7CzG,QAASuG,EAAUM,QAAAA,QAAQN,EAAUO,QAAAA,QAAQL,WAC7ChH,MAAO8G,EAAUQ,QAAAA,OAAON,WACxBV,WAAYQ,EAAUS,QAAAA,KAAKP,YAdhB,EACM,KAAA,EAAA,QAAA,QAAA;;ACKA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlCrB,IAkCqB,EAAA,EAAA,EAAA,EAlCrB,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,eACA,EAAA,QAAA,eACA,EAAA,QAAA,SACA,EAAA,EAAA,QAAA,WACA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,mBACA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,sBAyBqB,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAvBrB,MAAMQ,EAAmB,CAAC7B,EAAO8B,IAASpO,GAAUqD,EAAEC,QAAAA,OACpDgJ,EAAMtM,GACNqD,EAAEgL,QAAAA,UAAUD,EAAM7F,GAAOlF,EAAEiL,QAAAA,IAAItO,EAAOuI,KAGlCgG,EAAgB,CAACvO,EAAOoO,IAAQ/K,EAAEgL,QAAAA,UAAUhL,EAAEmL,QAAAA,OAAOJ,GAAO7F,GAAOvI,EAAMuI,IAiB1DkG,IAAAA,GAfpB,GAAA,EACCN,EAAAA,SAAAA,EAAkBnO,IAAW,CAC3BsG,OAAQtG,EAAML,KAAK2G,OACnBC,MAAOvG,EAAML,KAAK4G,MAClBC,aAAcxG,EAAML,KAAK6G,aACzBC,KAAMzG,EAAML,KAAK8G,KACjBiI,cAAe1O,EAAMiC,QAAQA,QAAQmG,OACrCrD,QAAS/E,EAAML,KAAKoF,UAClBY,EAPY,KAQfiF,IAAa,EAAmB,EAAA,oBAAA,CAC/BD,kBAAmBgE,EAAQhP,KAAKgL,kBAChCc,SAAUkD,EAAQC,OAAOnD,SACzBF,aAAcoD,EAAQhP,KAAK4L,cAC1BX,MAEU,EAAA,EAAA,cAAsBqB,EAAM4C,QAAAA,UAAU,eAAA,GAAA,IAAA,EAYnDC,OAAAA,EAAAA,SAAAA,GAAAA,KAAAA,cAAgB,KAAKxC,MAAMb,SAE3BsD,KAAAA,KAAO,EAACrD,EAAM/K,OAAWA,GAAO,QAAQ+K,IAAe,IAAR/K,EAAY,IAAM,MAdd,EAgBnDyM,SAEI,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAWC,EAAM2B,QAAAA,KAAM,MAAO,CAAEtM,SAAUgC,EAASE,SAAAA,gBACtD,EAAA,QAAA,cAAA,SAAA,CAAQ,KAAK,SAAS,QAAS,KAAK0H,MAAM3B,mBAAoB1E,EAAa,aAAA,KAAKqG,MAAMhG,SACrF,iBACD,EAAK,QAAA,cAAA,KAAA,KAAA,KAAKyI,KAAK,OAAQ,KAAKzC,MAAM/F,QAClC,EACG,QAAA,cAAA,IAAA,KAAA,kBACA,KAAK+F,MAAM9F,cAEd,EAAI,QAAA,cAAA,IAAA,KAAA,KAAKuI,KAAK,MAAO,KAAKzC,MAAM7F,OAChC,EACG,QAAA,cAAA,IAAA,KAAA,KAAKsI,KAAK,SAAU,KAAKzC,MAAMoC,eAC/B,aAGH,EAAC,QAAA,cAAA,EAAD,UAAA,CACE,MAAOH,EAAc,KAAKjC,MAAO3G,EAAb,KACpB,SAAU,KAAKmJ,cACf,WAAY,GAEZ,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAInJ,EAAIC,IAAAA,YACR,MAAM,iBAER,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAID,EAAIlC,IAAAA,MACR,MAAM,QACN,OAAQJ,EAAE4L,QAAAA,KAAK3K,EAAP,UAEV,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAIqB,EAAIZ,IAAAA,QACR,MAAM,UACN,OAAQ1B,EAAE4L,QAAAA,KAAKhK,KAEjB,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAIU,EAAIP,IAAAA,SACR,MAAM,mBAER,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAIO,EAAIN,IAAAA,UACR,MAAM,0BAER,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAIM,EAAIL,IAAAA,WACR,MAAM,qBAER,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAIK,EAAIJ,IAAAA,YACR,MAAM,4BAER,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAII,EAAIH,IAAAA,YACR,MAAM,iBAER,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAIG,EAAIF,IAAAA,iBACR,MAAM,4BAER,EAAC,QAAA,cAAA,EAAD,MAAA,CACE,GAAIE,EAAID,IAAAA,wBACR,MAAM,qCAGV,EAAA,QAAA,cAAA,SAAA,CAAQ,KAAK,SAAS,QAAS,KAAK4G,MAAMf,cA9D5C,oBAjBGiC,EAAAA,UAAY,CACjBlH,OAAQmH,EAAUG,QAAAA,MAAMvK,EAAEwK,QAAAA,OAAOhI,EAAT,cAAuB8H,WAC/CpH,MAAOkH,EAAUC,QAAAA,OAAOC,WACxBnH,aAAciH,EAAUC,QAAAA,OAAOC,WAC/BlH,KAAMgH,EAAUC,QAAAA,OAAOC,WACvBe,cAAejB,EAAUC,QAAAA,OAAOC,WAChChD,kBAAmB8C,EAAUS,QAAAA,KAAKP,WAClClC,SAAUgC,EAAUS,QAAAA,KAAKP,WACzBpC,aAAckC,EAAUS,QAAAA,KAAKP,YATlB,EACM,KAAA,EAAA,QAAA,QAAA;;ACTG,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAzBxB,IAyBwB,EAAA,EAAA,EAAA,EAzBxB,EAAA,EAAA,QAAA,UACA,EAAA,EAAA,QAAA,eACA,EAAA,QAAA,SACA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,eACA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,cAgBwB,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GANHuB,IAAAA,GARpB,GAAA,EACElP,EAAAA,SAAAA,IAAW,CACVQ,WAAYR,EAAML,KAAKa,aAExBoK,IAAa,EAAmB,EAAA,oBAAA,CAC/BY,KAAMmD,EAAQhP,KAAK6L,MAClBZ,MAEU,EAAA,EAAA,cAAyBqB,EAAM4C,QAAAA,UAAU,eAAA,GAAA,IAAA,EAetDhP,OAAAA,EAAAA,SAAAA,GAAAA,KAAAA,aAAe,MACPsP,MAAAA,EAAY,KAAK5B,MAEhB,MAAA,CACLzN,KAAMqP,EAAUC,WAChBrP,IAAKoP,EAAUE,UACfC,MAAOH,EAAUC,WAAaD,EAAUI,YACxCC,OAAQL,EAAUE,UAAYF,EAAUM,gBAI5CC,KAAAA,eAAkB3C,CAAAA,IACXQ,KAAAA,MAAQR,IA3BuC,EAWtDG,oBACOZ,KAAAA,MAAMd,KAAK,MAkBlB4B,SAEI,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAWC,EAAMsC,QAAAA,QAAS,MAAO,CAAEjN,SAAU,KAAK4J,MAAM9L,WAAakE,EAASE,SAAAA,gBACjF,EAAC,QAAA,cAAA,EAAD,QAAA,CAAa,WAAY,KAAK8K,iBAC9B,EAAC,QAAA,cAAA,EAAD,QAFF,SA/BGlC,EAAAA,UAAY,CACjBhN,WAAYiN,EAAUC,QAAAA,OACtBlC,KAAMiC,EAAUS,QAAAA,MAGX0B,EAAAA,aAAe,CACpBpP,WAAY,IACZgL,KAAMnI,EAAEwM,QAAAA,MARG,EAMS,KAAA,EAAA,QAAA,QAAA;;ACRTC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAjBf,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,SACA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,4BAYeA,SAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,WAAAA,OAAAA,EAAAA,IAAAA,EAAAA,GAAAA,GAAAA,MAAAA,EAAAA,IAAAA,IAAAA,KAAAA,EAAAA,GAAAA,OAAAA,UAAAA,eAAAA,KAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,OAAAA,gBAAAA,OAAAA,yBAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,GAAAA,EAAAA,KAAAA,EAAAA,IAAAA,OAAAA,eAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,QAAAA,EAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GATf,MAAMC,EAAmBvR,OAAOwR,sCAAwCC,EAAxE,QACMC,GAAQ,EAAY,EAAA,cAAA,EAAgBC,EAAAA,iBAAAA,GAAWJ,GAAiB,EAAgBK,EAAAA,iBAAAA,EAAhB,WAEhEN,EAAM,IACV,EAAC,QAAA,cAAA,EAAD,SAAA,CAAU,MAAOI,GACf,EAAC,QAAA,cAAA,EAAD,QADF,OAKaJ,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;;;ACZf,aALA,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,UAGA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFA,QAAA,gBAEA,EAAO,EAAA,QAAA,EAAC,QAAA,cAAA,EAAD,QAAP,MAAgBzR,SAASgS,cAAc","file":"src.afe6a84b.js","sourceRoot":"..\\src","sourcesContent":["export const INIT = 'INIT'\r\nexport const SET_STATE = 'SET_STATE'\r\n","const SPACE = ' '\n\nexport default class InputCatcher {\n  static instance\n\n  static mousePos = {}\n\n  static keyPressed = []\n\n  initialKeymap = {}\n\n  constructor (keymap) {\n    this.initialKeymap = keymap\n\n    if (InputCatcher.instance) {\n      return InputCatcher.instance\n    }\n    InputCatcher.instance = this\n\n    document.onmousemove = this.saveMousePos\n    window.document.addEventListener('keydown', this.process)\n  }\n\n  saveMousePos = (e) => {\n    InputCatcher.mousePos = {\n      x: e.pageX,\n      y: e.pageY,\n    }\n  }\n\n  process = (e) => {\n    if (e.key === SPACE) {\n      e.preventDefault()\n    }\n    this.saveKeyPressed(e)\n  }\n\n  saveKeyPressed = ({ keyCode }) => {\n    InputCatcher.keyPressed.push(keyCode)\n  }\n\n  reactToKeys = (keymap = this.initialKeymap) => {\n    InputCatcher.keyPressed.forEach((key) => keymap[key] && keymap[key]())\n    InputCatcher.keyPressed = []\n  }\n}\n","import InputCatcher from '../utils/InputCatcher'\n\nexport default function (data) {\n  const fieldSize = data.game.redSquares.getFieldSize()\n\n  return {\n    x: InputCatcher.mousePos.x - fieldSize.left,\n    y: InputCatcher.mousePos.y - fieldSize.top,\n  }\n}\n","export default function (state) {\n  return state.hero\n    ? {\n      x: state.hero.x,\n      y: state.hero.y,\n    }\n    : {\n      x: 0,\n      y: 0,\n    }\n}\n","function getRandomCoordinate (range, size) {\n  return (Math.random() * (range - (size * 2))) + size\n}\n\nlet target\n\nexport default function (state) {\n  if (!target || (state.hero.x === target.x && state.hero.y === target.y)) {\n    target = {\n      x: getRandomCoordinate(state.game.fieldWidth, state.hero.size),\n      y: getRandomCoordinate(state.game.fieldHeight, state.hero.size),\n    }\n  }\n\n  return target\n}\n","import { HIGHEST_BEATS } from '../constants/game'\n\nexport function isNaNumber (num) {\n  return Number.isNaN(parseFloat(num))\n}\n\nexport function sign (num) {\n  if (num === 0 || isNaNumber(num)) {\n    return num\n  }\n\n  return num > 0 ? 1 : -1\n}\n\nexport const defaultHeroPosition = (game, size) => ({\n  x: (game.fieldWidth - size) / 2,\n  y: (game.fieldHeight - size) / 2,\n})\n\nexport function saveHighestScore (score) {\n  localStorage.setItem(\n    HIGHEST_BEATS,\n    score,\n  )\n}\n\nexport function getHighestScore () {\n  const score = localStorage[HIGHEST_BEATS]\n  return score ? parseInt(score, 10) : 0\n}\n\nexport function removeHighestScore () {\n  localStorage.removeItem(HIGHEST_BEATS)\n}\n","export const SCARY_INTERVAL = 4 / 3\nexport const VARIANTS_QUANTITY = 24\n\nconst getDistance = (A, B) => Math.sqrt(((A.x - B.x) ** 2) + ((A.y - B.y) ** 2))\n\nexport const getNearest = ({ x, y }, threats) => threats.reduce((nearest, threat) => {\n  const distance = getDistance({ x, y }, threat)\n  if (!nearest.threat || nearest.distance > distance) {\n    return {\n      threat,\n      distance,\n    }\n  }\n\n  return nearest\n}, {\n  threat: null,\n  distance: Infinity,\n})\n\nexport const getSafeInterval = (hero, threats) => (\n  hero.size + threats.size + hero.maxSpeed + threats.maxSpeed\n) * SCARY_INTERVAL\n\nexport function getScaryEdges (hero, size, width, height) {\n  const edges = []\n  const { x, y } = hero\n\n  edges.push({\n    x,\n    y: -size * 1.1,\n  })\n  edges.push({\n    x,\n    y: height + (size * 1.1),\n  })\n\n  edges.push({\n    x: -size * 1.1,\n    y,\n  })\n  edges.push({\n    x: width + (size * 1.1),\n    y,\n  })\n\n  return edges\n}\n\nexport function getVariants (hero) {\n  const variants = []\n  for (let angle = 0; angle < Math.PI * 2; angle += (Math.PI * 2) / VARIANTS_QUANTITY) {\n    variants.push({\n      x: hero.x + (Math.cos(angle) * hero.maxSpeed),\n      y: hero.y + (Math.sin(angle) * hero.maxSpeed),\n    })\n  }\n\n  return variants\n}\n","import _ from 'lodash'\nimport { defaultHeroPosition } from '../utils/funcs'\nimport { getNearest, getSafeInterval, getScaryEdges } from './common'\n\nexport default function ({ game, hero, threats }) {\n  const scaryEdges = getScaryEdges(hero, 2 * threats.size, game.fieldWidth, game.fieldHeight)\n\n  const nearestThreat = getNearest(hero, _.extend(scaryEdges, threats.threats))\n\n  if (!nearestThreat.threat || nearestThreat.distance > getSafeInterval(hero, threats) * 2) {\n    return defaultHeroPosition(game, hero.size)\n  }\n\n  const distance = {\n    x: hero.x - nearestThreat.threat.x,\n    y: hero.y - nearestThreat.threat.y,\n  }\n\n  return {\n    x: hero.x + distance.x,\n    y: hero.y + distance.y,\n  }\n}\n","import _ from 'lodash'\nimport { defaultHeroPosition } from '../utils/funcs'\nimport { getNearest, getSafeInterval, getScaryEdges, getVariants } from './common'\n\nexport default function ({ game, hero, threats }) {\n  const scaryEdges = getScaryEdges(hero, 2 * threats.size, game.fieldWidth, game.fieldHeight)\n  const newThreats = threats.threats.map((threat) => (\n    {\n      x: threat.x + threat.speed.x,\n      y: threat.y + threat.speed.y,\n    }\n  ))\n  const extendedThreats = _.extend(scaryEdges, newThreats)\n\n  const nearestThreat = getNearest(hero, extendedThreats)\n\n  if (!nearestThreat.threat || nearestThreat.distance > getSafeInterval(hero, threats)) {\n    return defaultHeroPosition(game, hero.size)\n  }\n\n  const variant = getVariants(hero).reduce((best, current) => {\n    const { distance } = getNearest(current, extendedThreats)\n\n    if (distance > best.distance) {\n      return {\n        x: current.x,\n        y: current.y,\n        distance,\n      }\n    }\n\n    return best\n  }, {\n    x: hero.x,\n    y: hero.y,\n    distance: nearestThreat.distance,\n  })\n\n  return {\n    x: variant.x,\n    y: variant.y,\n  }\n}\n","import { getNearest, getSafeInterval, getVariants } from './common'\n\nconst setupMinDistance = (fieldWidth, fieldHeight, safe) => ({ x, y }, threats) => Math.min(\n  getNearest({ x, y }, threats).distance,\n  x + safe,\n  (fieldWidth + safe) - x,\n  y + safe,\n  (fieldHeight + safe) - y,\n)\n\nfunction getClearest (safe, fieldWidth, fieldHeight, threats) {\n  let clearest = 0\n  let xBest\n  let yBest\n  const getMinDistance = setupMinDistance(fieldWidth, fieldHeight, safe)\n\n  for (let x = safe; x < fieldWidth - safe; x += safe) {\n    for (let y = safe; y < fieldHeight - safe; y += safe) {\n      const distance = getMinDistance({ x, y }, threats)\n\n      if (distance > clearest) {\n        clearest = distance\n        xBest = x\n        yBest = y\n      }\n    }\n  }\n\n  return {\n    x: xBest,\n    y: yBest,\n  }\n}\n\nexport default function ({ game, hero, threats }) {\n  const newThreats = threats.threats.map((threat) => ({\n    x: threat.x + threat.speed.x,\n    y: threat.y + threat.speed.y,\n  }))\n\n  const safe = hero.size + threats.size\n  const getMinDistance = setupMinDistance(game.fieldWidth, game.fieldHeight, safe)\n  const nearest = getMinDistance(hero, newThreats)\n\n  if (nearest > getSafeInterval(hero, threats)) {\n    return getClearest(safe, game.fieldWidth, game.fieldHeight, newThreats)\n  }\n\n  const variant = getVariants(hero).reduce((best, current) => {\n    const distance = getMinDistance(current, newThreats)\n\n    if (distance > best.distance) {\n      return {\n        x: current.x,\n        y: current.y,\n        distance,\n      }\n    }\n\n    return best\n  }, {\n    x: hero.x,\n    y: hero.y,\n    distance: nearest,\n  })\n\n  return {\n    x: variant.x,\n    y: variant.y,\n  }\n}\n","export { default as Mouse } from './manual'\r\nexport { default as Still } from './still'\r\nexport { default as Random } from './random'\r\nexport { default as Scared } from './scared'\r\nexport { default as Stable } from './stable'\r\nexport { default as Traveller } from './traveller'\r\n","import _ from 'lodash'\nimport * as managers from '../controllers'\n\nexport const SPEEDS = {\n  Normal: 'Normal',\n  Fast: 'Fast',\n  Faster: 'Faster',\n}\n\nexport const DEFAULTS = {\n  frameLength: 30,\n  fieldWidth: 800,\n  fieldHeight: 600,\n  sideWidth: 200,\n  shadowPeriod: 1,\n  shadowQuantity: 50,\n  speed: SPEEDS.Fast,\n  manager: _.findKey(managers, (f) => f === managers.Traveller),\n  heroSize: 25,\n  heroSpeed: 10,\n  threatSize: 15,\n  threatSpeed: 4,\n  threatLimit: 20,\n  threatAddTimeout: 1000,\n  threatRemoveProbability: 5,\n}\n\nexport const IDS = {\n  autoRestart: 'game.autoRestart',\n  speed: 'game.speed',\n  manager: 'game.manager',\n  heroSize: 'hero.size',\n  heroSpeed: 'hero.maxSpeed',\n  threatSize: 'threats.size',\n  threatSpeed: 'threats.maxSpeed',\n  threatLimit: 'threats.limit',\n  threatAddTimeout: 'threats.addTimeout',\n  threatRemoveProbability: 'threats.removeProbability',\n}\n\nexport const HIGHEST_BEATS = 'highestBeats'\n\nexport const GAME_STATUS = {\n  play: 'play',\n  pause: 'pause',\n  stop: 'stop',\n}\n\nexport const BUTTON_NAMES = {\n  [GAME_STATUS.play]: 'Pause',\n  [GAME_STATUS.pause]: 'Resume',\n  [GAME_STATUS.stop]: 'Start',\n}\n\nexport const KEY_CODES = {\n  space: 32,\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\nimport { DEFAULTS, GAME_STATUS } from '../constants/game'\n\nconst initialState = {\n  redSquares: null,\n  inputController: null,\n  manager: DEFAULTS.manager,\n  status: GAME_STATUS.stop,\n  autoRestart: true,\n  beats: 0,\n  highestBeats: 0,\n  outs: 0,\n  frame: 0,\n  speed: DEFAULTS.speed,\n  fieldWidth: DEFAULTS.fieldWidth,\n  fieldHeight: DEFAULTS.fieldHeight,\n  error: '',\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.INIT:\n      return _.extend({}, state, action.data)\n    case types.SET_STATE:\n      return _.extend({}, state, action.data.game)\n    default:\n      return state\n  }\n}\n","export const HERO_STATUSES = {\n  normal: 'normal',\n  trouble: 'trouble',\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\nimport { DEFAULTS } from '../constants/game'\nimport { HERO_STATUSES } from '../constants/hero'\nimport { defaultHeroPosition } from '../utils/funcs'\n\nconst initialState = {\n  ...defaultHeroPosition(DEFAULTS, DEFAULTS.heroSize),\n  maxSpeed: DEFAULTS.heroSpeed,\n  status: HERO_STATUSES.normal,\n  size: DEFAULTS.heroSize,\n  shadowPeriod: DEFAULTS.shadowPeriod,\n  shadowQuantity: DEFAULTS.shadowQuantity,\n  shadows: [],\n  target: {\n    ...defaultHeroPosition(DEFAULTS, DEFAULTS.heroSize),\n    save: '',\n  },\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.SET_STATE:\n      return _.extend({}, state, action.data.hero)\n    default:\n      return state\n  }\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\nimport { DEFAULTS } from '../constants/game'\n\nconst initialState = {\n  threats: [],\n  size: DEFAULTS.threatSize,\n  maxSpeed: DEFAULTS.threatSpeed,\n  lastTime: 0,\n  addTimeout: DEFAULTS.threatAddTimeout,\n  index: 0,\n  limit: DEFAULTS.threatLimit,\n  removeProbability: DEFAULTS.threatRemoveProbability,\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.SET_STATE:\n      return _.extend({}, state, action.data.threats)\n    default:\n      return state\n  }\n}\n","export { default as game } from './game'\r\nexport { default as hero } from './hero'\r\nexport { default as threats } from './threats'\r\n","import { GAME_STATUS } from '../constants/game'\nimport { HERO_STATUSES } from '../constants/hero'\n\nconst getHeroStatus = (x, y, heroSize, threatSize, threats) => {\n  const safeLength = heroSize + threatSize\n\n  if (threats.some((threat) => Math.abs(threat.x - x) < safeLength && Math.abs(threat.y - y) < safeLength)) {\n    return HERO_STATUSES.trouble\n  }\n\n  return HERO_STATUSES.normal\n}\n\nfunction getMove (hero, target) {\n  const xDelta = target.x - hero.x\n  const yDelta = target.y - hero.y\n  const distance = Math.sqrt((xDelta ** 2) + (yDelta ** 2))\n\n  if (distance <= hero.maxSpeed) {\n    return {\n      xMove: xDelta,\n      yMove: yDelta,\n    }\n  }\n\n  const normalization = distance / hero.maxSpeed\n\n  return {\n    xMove: xDelta / normalization,\n    yMove: yDelta / normalization,\n  }\n}\n\nfunction getShadows ({ game, hero: { shadows, shadowPeriod, shadowQuantity, x, y } }) {\n  if (!(game.frame % shadowPeriod)) {\n    if (shadows.length === shadowQuantity) {\n      shadows.pop()\n    }\n\n    shadows.unshift({\n      x,\n      y,\n      id: shadows.length ? shadows[0].id + 1 : 0,\n    })\n  }\n\n  return shadows\n}\n\nexport function moveHero (state) {\n  const { game, hero, threats: { threats } } = state\n  const threatSize = state.threats.size\n\n  const { xMove, yMove } = getMove(hero, hero.target)\n\n  let x = hero.x + xMove\n  x = Math.max(x, hero.size)\n  x = Math.min(x, game.fieldWidth - hero.size)\n\n  let y = hero.y + yMove\n  y = Math.max(y, hero.size)\n  y = Math.min(y, game.fieldHeight - hero.size)\n\n  const status = getHeroStatus(x, y, hero.size, threatSize, threats)\n\n  return {\n    ...state,\n    game: {\n      ...state.game,\n      status: status === HERO_STATUSES.normal ? GAME_STATUS.play : GAME_STATUS.stop,\n    },\n    hero: {\n      ...state.hero,\n      x,\n      y,\n      status,\n      shadows: getShadows(state),\n    },\n  }\n}\n","import _ from 'lodash'\nimport { sign } from '../utils/funcs'\nimport { DEFAULTS } from '../constants/game'\n\nconst processSpeed = (threat, size, canFlyAway) => (axis, lean) => {\n  const updatedThreat = { ...threat }\n\n  updatedThreat.isGoingOut = sign(lean) === sign(updatedThreat.speed[axis])\n\n  if (!updatedThreat.isOut) {\n    if (canFlyAway && updatedThreat.isGoingOut) {\n      updatedThreat.isOut = true\n    } else {\n      updatedThreat.speed[axis] = (updatedThreat.isGoingOut ? -1 : 1) * (updatedThreat.speed[axis] || 1)\n    }\n  }\n  if (Math.abs(lean) > size * 3) {\n    updatedThreat.isAroundField = false\n  }\n\n  return updatedThreat\n}\n\nconst beat = (\n  removeProbability,\n  size,\n  fieldWidth,\n  fieldHeight,\n) => (threat) => {\n  let newThreat = { ...threat }\n  const canFlyAway = Math.random() < 1 / removeProbability\n  const processThreat = processSpeed(newThreat, size, canFlyAway)\n\n  const leftBorder = size\n  if (newThreat.x < leftBorder) {\n    newThreat = processThreat('x', newThreat.x - leftBorder)\n  }\n  const rightBorder = fieldWidth - size\n  if (newThreat.x > rightBorder) {\n    newThreat = processThreat('x', newThreat.x - rightBorder)\n  }\n\n  const topBorder = size\n  if (newThreat.y < topBorder) {\n    newThreat = processThreat('y', newThreat.y - topBorder)\n  }\n  const bottomBorder = fieldHeight - size\n  if (newThreat.y > bottomBorder) {\n    newThreat = processThreat('y', newThreat.y - bottomBorder)\n  }\n\n  return newThreat\n}\n\nconst newThreat = (size, index, fieldWidth, fieldHeight, maxSpeed) => {\n  const lean = size * 2\n  let x = Math.round(Math.random() * (fieldWidth - lean))\n  let y = 0 - lean\n  let speed = {\n    x: Math.round(((Math.random() * 2) - 1) * maxSpeed),\n    y: Math.ceil(Math.random() * maxSpeed),\n  }\n\n  if (Math.random() < 0.5) {\n    x = 0 - lean\n    y = Math.round(Math.random() * (fieldHeight - lean))\n    speed = {\n      x: Math.ceil(Math.random() * maxSpeed),\n      y: Math.round(((Math.random() * 2) - 1) * maxSpeed),\n    }\n\n    if (Math.random() < 0.5) {\n      x = fieldWidth\n      speed.x *= -1\n    }\n  } else if (Math.random() < 0.5) {\n    y = fieldHeight\n    speed.y *= -1\n  }\n  return {\n    id: index,\n    x,\n    y,\n    speed,\n    isOut: false,\n    isAroundField: true,\n  }\n}\n\nfunction moveThreats ({ threats, removeProbability, size }, fieldWidth, fieldHeight) {\n  return threats\n    .map((threat) => ({\n      ...threat,\n      x: threat.x + threat.speed.x,\n      y: threat.y + threat.speed.y,\n    }))\n    .map(beat(\n      removeProbability,\n      size,\n      fieldWidth,\n      fieldHeight,\n    ))\n    .filter((threat) => threat.isAroundField)\n}\n\nfunction beatThreats (newThreats) {\n  let beats = 0\n\n  return {\n    beatenThreats: newThreats.map((threat) => {\n      const updatedThreat = { ...threat }\n\n      if (updatedThreat.isGoingOut && !updatedThreat.isOut) {\n        beats += 1\n        delete updatedThreat.isGoingOut\n      }\n      return updatedThreat\n    }, 0),\n    beats,\n  }\n}\n\nfunction addThreats ({ newThreats, threats, frame, fieldWidth, fieldHeight, frameLength }) {\n  const addedThreats = [...newThreats]\n  let isAdded = false\n  if (newThreats.length < threats.limit && frame >= threats.lastTime + (threats.addTimeout / frameLength)) {\n    addedThreats.push(newThreat(\n      threats.size,\n      threats.index,\n      fieldWidth,\n      fieldHeight,\n      threats.maxSpeed,\n    ))\n    isAdded = true\n  }\n  return { addedThreats, isAdded }\n}\n\nexport function controlThreats (state) {\n  const { threats, game: { frame, fieldWidth, fieldHeight } } = state\n  const { frameLength } = DEFAULTS\n\n  let newThreats = moveThreats(threats, fieldWidth, fieldHeight)\n  const outs = threats.threats.length - newThreats.length\n\n  const { beatenThreats, beats } = beatThreats(newThreats)\n  newThreats = beatenThreats\n\n  const { addedThreats, isAdded } = addThreats(\n    { newThreats, threats, frame, fieldWidth, fieldHeight, frameLength },\n  )\n  newThreats = addedThreats\n\n  const newState = _.merge({}, state, {\n    game: {\n      beats: state.game.beats + beats,\n      outs: state.game.outs + outs,\n    },\n    threats: isAdded\n      ? {\n        lastTime: frame,\n        index: threats.index + 1,\n      }\n      : threats,\n  })\n\n  newState.threats.threats = newThreats\n\n  return newState\n}\n","import _ from 'lodash'\nimport { compose } from 'redux'\nimport * as managers from '../controllers'\nimport { DEFAULTS, GAME_STATUS, KEY_CODES } from '../constants/game'\nimport { defaultHeroPosition, isNaNumber } from '../utils/funcs'\nimport { moveHero } from './hero'\nimport { controlThreats } from './threats'\n\nconst statusUpdate = (state, status) => _.merge({}, state, {\n  game: {\n    status,\n  },\n})\n\nexport function spacePress (state) {\n  switch (state.game.status) {\n    case GAME_STATUS.play:\n      return statusUpdate(state, GAME_STATUS.pause)\n    case GAME_STATUS.pause:\n      return statusUpdate(state, GAME_STATUS.play)\n    case GAME_STATUS.stop:\n    default:\n      // we use spread because of need to rewrite (not merge) threats\n      return {\n        ...state,\n        game: {\n          ...state.game,\n          status: GAME_STATUS.play,\n          beats: 0,\n          outs: 0,\n          frame: 0,\n          error: '',\n        },\n        hero: {\n          ...state.hero,\n          ...defaultHeroPosition(state.game, state.hero.size),\n        },\n        threats: {\n          ...state.threats,\n          threats: [],\n          lastTime: -state.threats.addTimeout / DEFAULTS.frameLength,\n        },\n      }\n  }\n}\n\nfunction callManager (oldState) {\n  const state = _.merge({}, oldState, {\n    hero: {\n      target: managers[oldState.game.manager](oldState),\n    },\n  })\n  if (isNaNumber(state.hero.target.x) || isNaNumber(state.hero.target.y)) {\n    state.game.error = 'Bad target'\n    state.hero.target = {\n      ...state.hero.target,\n      x: state.hero.x,\n      y: state.hero.y,\n    }\n  }\n\n  return state\n}\n\nfunction reactToKeys (oldState) {\n  let state = { ...oldState }\n\n  if (state.game.status === GAME_STATUS.stop && state.game.autoRestart) {\n    state = callManager(state)\n    state = spacePress(state)\n  } else {\n    state.game.inputController.reactToKeys({\n      [KEY_CODES.space]: () => {\n        state = spacePress(state)\n      },\n    })\n  }\n\n  return state\n}\n\nconst nextPlayFrame = compose(controlThreats, callManager, moveHero)\n\nexport function gameStateUpdater (oldState) {\n  let state = reactToKeys(oldState)\n\n  if (state.game.status === GAME_STATUS.play) {\n    state = nextPlayFrame(state)\n    state.game.frame += 1\n  }\n\n  return state\n}\n","export * from './game'\r\nexport * from './hero'\r\nexport * from './threats'\r\n","import * as types from '../constants/actionTypes'\nimport { DEFAULTS, GAME_STATUS, SPEEDS } from '../constants/game'\nimport InputCatcher from '../utils/InputCatcher'\nimport { gameStateUpdater, spacePress } from '../game-logic'\nimport { getHighestScore, removeHighestScore, saveHighestScore } from '../utils/funcs'\n\nexport function processSpacePress () {\n  return (dispatch, getState) => {\n    dispatch({\n      type: types.SET_STATE,\n      data: spacePress(getState()),\n    })\n  }\n}\n\nconst getWaitTime = (state, lastFrameTime) => Math.max(\n  (lastFrameTime + DEFAULTS.frameLength) - performance.now(),\n  0,\n)\n\nconst gameCycle = (initState) => {\n  const state = gameStateUpdater(initState)\n\n  if (state.game.status === GAME_STATUS.stop && initState.game.status === GAME_STATUS.play) {\n    state.game.highestBeats = Math.max(state.game.beats, state.game.highestBeats)\n    saveHighestScore(state.game.highestBeats)\n  }\n\n  return state\n}\n\nfunction updateFrame (dispatch, getState, lastFrameTime) {\n  return () => {\n    const initState = getState()\n    let state = gameCycle(initState)\n\n    if (state.game.speed === SPEEDS.Faster) {\n      for (let i = 1; i <= 100; i += 1) {\n        state = gameCycle(state)\n      }\n    }\n\n    if (state.game.status === GAME_STATUS.play || initState.game.status === GAME_STATUS.play) {\n      dispatch({\n        type: types.SET_STATE,\n        data: state,\n      })\n    }\n\n    setTimeout(\n      updateFrame(dispatch, getState, performance.now()),\n      state.game.speed === SPEEDS.Normal ? getWaitTime(state, lastFrameTime) : 0,\n    )\n  }\n}\n\nexport function clearHighest () {\n  return (dispatch) => {\n    removeHighestScore()\n\n    dispatch({\n      type: types.INIT,\n      data: {\n        highestBeats: 0,\n      },\n    })\n  }\n}\n\nexport function init (redSquares) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: types.INIT,\n      data: {\n        redSquares,\n        inputController: new InputCatcher(),\n        highestBeats: getHighestScore(),\n      },\n    })\n\n    updateFrame(dispatch, getState)()\n  }\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\n\nexport const setState = (name, value) => ({\n  type: types.SET_STATE,\n  data: _.set({}, name, value),\n})\n","import * as game from './game'\nimport * as params from './params'\n\nexport {\n  game,\n  params,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { HERO_STATUSES } from '../constants/hero'\nimport style from './RedSquares.less'\n\nconst heroStyle = {\n  [HERO_STATUSES.normal]: 'rgb(50, 205, 50)',\n  [HERO_STATUSES.trouble]: 'rgb(237, 20, 61)',\n}\n\n@connect(\n  (state) => ({\n    fieldWidth: state.game.fieldWidth,\n    fieldHeight: state.game.fieldHeight,\n    heroStatus: state.hero.status,\n    heroSize: state.hero.size,\n    heroPos: {\n      x: state.hero.x,\n      y: state.hero.y,\n    },\n    threatSize: state.threats.size,\n    threats: state.threats.threats,\n    shadows: state.hero.shadows,\n    error: state.game.error,\n  }),\n)\nexport default class CanvasField extends React.PureComponent {\n  static propTypes = {\n    fieldWidth: PropTypes.number.isRequired,\n    fieldHeight: PropTypes.number.isRequired,\n    heroStatus: PropTypes.oneOf(_.values(HERO_STATUSES)).isRequired,\n    heroSize: PropTypes.number.isRequired,\n    heroPos: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n    }).isRequired,\n    threatSize: PropTypes.number.isRequired,\n    threats: PropTypes.arrayOf(PropTypes.object).isRequired,\n    shadows: PropTypes.arrayOf(PropTypes.object).isRequired,\n    error: PropTypes.string.isRequired,\n    refHandler: PropTypes.func.isRequired,\n  }\n\n  canvas = null\n\n  componentDidMount () {\n    this.paint()\n  }\n\n  componentDidUpdate () {\n    this.paint()\n  }\n\n  clear = () => {\n    this.canvas.clearRect(0, 0, this.props.fieldWidth, this.props.fieldHeight)\n  }\n\n  drawSquare = ({ pos, size, color }) => {\n    this.canvas.fillStyle = color\n    this.canvas.fillRect(\n      Math.round(pos.x - size),\n      Math.round(pos.y - size),\n      size * 2,\n      size * 2,\n    )\n  }\n\n  paint = () => {\n    this.clear()\n\n    this.props.shadows.forEach((shadow, index) => this.drawSquare({\n      pos: this.props.shadows[index],\n      size: this.props.heroSize,\n      color: `rgba(237, 20, 61, ${((this.props.shadows.length - index - 1) / this.props.shadows.length) * 0.2})`,\n    }))\n    this.drawSquare({\n      pos: this.props.heroPos,\n      size: this.props.heroSize,\n      color: heroStyle[this.props.heroStatus],\n    })\n    this.props.threats.forEach((threat) => (\n      this.drawSquare({\n        pos: threat,\n        size: this.props.threatSize,\n        color: 'rgb(100, 149, 237)',\n      })\n    ))\n  }\n\n  handleRefCanvas = (elem) => {\n    this.canvas = elem.getContext('2d')\n    this.props.refHandler(elem)\n  }\n\n  render () {\n    return (\n      <div className={style.fieldWrapper}>\n        <canvas\n          className={style.field}\n          ref={this.handleRefCanvas}\n          width={this.props.fieldWidth}\n          height={this.props.fieldHeight}\n        >\n          {'You are using an outdated browser.'}\n        </canvas>\n        <div className={style.error}>{this.props.error}</div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport _ from 'lodash'\nimport { Check, Connector, Input, Radio } from 'state-control'\nimport * as actions from '../actions'\nimport * as managers from '../controllers'\nimport { BUTTON_NAMES, DEFAULTS, GAME_STATUS, IDS, SPEEDS } from '../constants/game'\nimport style from './RedSquares.less'\n\nconst extendConnection = (props, ids) => (state) => _.extend(\n  props(state),\n  _.mapValues(ids, (id) => _.get(state, id)),\n)\n\nconst mapStateToIds = (state, ids) => _.mapValues(_.invert(ids), (id) => state[id])\n\n@connect(\n  extendConnection((state) => ({\n    status: state.game.status,\n    beats: state.game.beats,\n    highestBeats: state.game.highestBeats,\n    outs: state.game.outs,\n    threatsLength: state.threats.threats.length,\n    manager: state.game.manager,\n  }), IDS),\n  (dispatch) => bindActionCreators({\n    processSpacePress: actions.game.processSpacePress,\n    setState: actions.params.setState,\n    clearHighest: actions.game.clearHighest,\n  }, dispatch),\n)\nexport default class Sidebar extends React.Component {\n  static propTypes = {\n    status: PropTypes.oneOf(_.values(GAME_STATUS)).isRequired,\n    beats: PropTypes.number.isRequired,\n    highestBeats: PropTypes.number.isRequired,\n    outs: PropTypes.number.isRequired,\n    threatsLength: PropTypes.number.isRequired,\n    processSpacePress: PropTypes.func.isRequired,\n    setState: PropTypes.func.isRequired,\n    clearHighest: PropTypes.func.isRequired,\n  }\n\n  changeHandler = this.props.setState\n\n  getS = (name, num) => `${num || 'No'} ${name}${num !== 1 ? 's' : ''}`\n\n  render () {\n    return (\n      <div className={style.side} style={{ width: `${DEFAULTS.sideWidth}px` }}>\n        <button type=\"button\" onClick={this.props.processSpacePress}>{BUTTON_NAMES[this.props.status]}</button>\n        {' (Press Space)'}\n        <h2>{this.getS('beat', this.props.beats)}</h2>\n        <p>\n          {'Highest beats: '}\n          {this.props.highestBeats}\n        </p>\n        <p>{this.getS('out', this.props.outs)}</p>\n        <p>\n          {this.getS('threat', this.props.threatsLength)}\n          {' on field'}\n        </p>\n\n        <Connector\n          state={mapStateToIds(this.props, IDS)}\n          onChange={this.changeHandler}\n          defaultNum={1}\n        >\n          <Check\n            id={IDS.autoRestart}\n            label=\"Auto restart\"\n          />\n          <Radio\n            id={IDS.speed}\n            label=\"Speed\"\n            values={_.keys(SPEEDS)}\n          />\n          <Radio\n            id={IDS.manager}\n            label=\"Control\"\n            values={_.keys(managers)}\n          />\n          <Input\n            id={IDS.heroSize}\n            label=\"Hero size (px)\"\n          />\n          <Input\n            id={IDS.heroSpeed}\n            label=\"Hero max speed (px/s)\"\n          />\n          <Input\n            id={IDS.threatSize}\n            label=\"Threat size (px)\"\n          />\n          <Input\n            id={IDS.threatSpeed}\n            label=\"Threat max speed (px/s)\"\n          />\n          <Input\n            id={IDS.threatLimit}\n            label=\"Threat limit\"\n          />\n          <Input\n            id={IDS.threatAddTimeout}\n            label=\"Threat add timeout (ms)\"\n          />\n          <Input\n            id={IDS.threatRemoveProbability}\n            label=\"Threat remove probability (1/x)\"\n          />\n        </Connector>\n        <button type=\"button\" onClick={this.props.clearHighest}>Clear highest</button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport * as actions from '../actions'\nimport { DEFAULTS } from '../constants/game'\nimport style from './RedSquares.less'\nimport CanvasField from './CanvasField'\nimport Sidebar from './Sidebar'\n\n@connect(\n  (state) => ({\n    fieldWidth: state.game.fieldWidth,\n  }),\n  (dispatch) => bindActionCreators({\n    init: actions.game.init,\n  }, dispatch),\n)\nexport default class RedSquares extends React.Component {\n  static propTypes = {\n    fieldWidth: PropTypes.number,\n    init: PropTypes.func,\n  }\n\n  static defaultProps = {\n    fieldWidth: 800,\n    init: _.noop,\n  }\n\n  componentDidMount () {\n    this.props.init(this)\n  }\n\n  getFieldSize = () => {\n    const fieldRect = this.field\n\n    return {\n      left: fieldRect.offsetLeft,\n      top: fieldRect.offsetTop,\n      right: fieldRect.offsetLeft + fieldRect.clientWidth,\n      bottom: fieldRect.offsetTop + fieldRect.clientHeight,\n    }\n  }\n\n  handleRefField = (elem) => {\n    this.field = elem\n  }\n\n  render () {\n    return (\n      <div className={style.wrapper} style={{ width: `${this.props.fieldWidth + DEFAULTS.sideWidth}px` }}>\n        <CanvasField refHandler={this.handleRefField} />\n        <Sidebar />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport * as reducers from './reducers'\nimport RedSquares from './components/RedSquares'\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(combineReducers(reducers), composeEnhancers(applyMiddleware(thunk)))\n\nconst App = () => (\n  <Provider store={store}>\n    <RedSquares />\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nrender(<App />, document.querySelector('#app'))\r\n"]}