{"version":3,"sources":["webpack:///./src/constants/actionTypes.js","webpack:///./src/utils/InputCatcher.js","webpack:///./src/controllers/manual.js","webpack:///./src/controllers/still.js","webpack:///./src/controllers/random.js","webpack:///./src/utils/funcs.js","webpack:///./src/controllers/common.js","webpack:///./src/controllers/scared.js","webpack:///./src/controllers/stable.js","webpack:///./src/controllers/traveller.js","webpack:///./src/constants/game.js","webpack:///./src/reducers/game.js","webpack:///./src/constants/hero.js","webpack:///./src/reducers/hero.js","webpack:///./src/reducers/threats.js","webpack:///./src/game-logic/hero.js","webpack:///./src/game-logic/threats.js","webpack:///./src/game-logic/game.js","webpack:///./src/actions/game.js","webpack:///./src/actions/params.js","webpack:///./src/components/CanvasField.jsx","webpack:///./src/components/Sidebar.jsx","webpack:///./src/components/RedSquares.jsx","webpack:///./src/App.jsx","webpack:///./src/index.js","webpack:///./src/components/RedSquares.less?499b"],"names":["INIT","SET_STATE","InputCatcher","keymap","_classCallCheck","this","_initialiseProps","call","initialKeymap","instance","document","onmousemove","saveMousePos","window","addEventListener","process","mousePos","keyPressed","e","x","pageX","y","pageY","key","preventDefault","_this","saveKeyPressed","_ref","keyCode","push","reactToKeys","arguments","length","undefined","forEach","manual","data","fieldSize","game","redSquares","getFieldSize","left","top","still","state","hero","getRandomCoordinate","range","size","Math","random","target","fieldWidth","fieldHeight","isNaNumber","num","Number","isNaN","parseFloat","sign","defaultHeroPosition","VARIANTS_QUANTITY","getNearest","threats","reduce","nearest","threat","distance","A","B","sqrt","pow","getDistance","Infinity","getSafeInterval","maxSpeed","getScaryEdges","width","height","edges","getVariants","variants","angle","PI","cos","sin","scared","scaryEdges","nearestThreat","_","extend","stable","newThreats","map","speed","extendedThreats","variant","best","current","setupMinDistance","safe","min","traveller","_ref2","getMinDistance","clearest","xBest","yBest","getClearest","SPEEDS","Normal","Fast","Faster","DEFAULTS","frameLength","sideWidth","shadowPeriod","shadowQuantity","manager","findKey","managers","f","heroSize","heroSpeed","threatSize","threatSpeed","threatLimit","threatAddTimeout","threatRemoveProbability","IDS","autoRestart","HIGHEST_BEATS","GAME_STATUS","play","pause","stop","BUTTON_NAMES","_BUTTON_NAMES","KEY_CODES","space","initialState","inputController","status","beats","highestBeats","outs","frame","error","reducers_game","action","type","types","HERO_STATUSES","normal","trouble","shadows","save","reducers_hero","lastTime","addTimeout","index","limit","removeProbability","reducers_threats","getHeroStatus","safeLength","some","abs","beat","newThreat","canFlyAway","processThreat","axis","lean","updatedThreat","isGoingOut","isOut","isAroundField","processSpeed","leftBorder","rightBorder","topBorder","bottomBorder","round","ceil","id","statusUpdate","merge","spacePress","game_extends","callManager","oldState","nextPlayFrame","compose","_state$game","threats_extends","filter","moveThreats","_beatThreats","beatenThreats","beatThreats","_addThreats","addedThreats","isAdded","addThreats","newState","_getMove","xDelta","yDelta","xMove","yMove","normalization","getMove","max","hero_extends","_ref$hero","pop","unshift","getShadows","gameStateUpdater","_state$game$inputCont","processSpacePress","dispatch","getState","getWaitTime","lastFrameTime","performance","now","gameCycle","initState","score","localStorage","setItem","saveHighestScore","clearHighest","removeItem","init","parseInt","getHighestScore","updateFrame","i","setTimeout","setState","name","value","set","heroStyle","_heroStyle","CanvasField","connect","heroStatus","heroPos","canvas","clear","clearRect","props","drawSquare","pos","color","fillStyle","fillRect","paint","shadow","handleRefCanvas","elem","getContext","refHandler","componentDidMount","componentDidUpdate","render","react_default","a","createElement","className","style","fieldWrapper","field","ref","React","PureComponent","Sidebar","ids","mapValues","get","extendConnection","threatsLength","bindActionCreators","actions","changeHandler","getS","side","onClick","state_control_es","invert","mapStateToIds","onChange","defaultNum","label","values","keys","Component","Sidebar_Sidebar","RedSquares","fieldRect","offsetLeft","offsetTop","right","clientWidth","bottom","clientHeight","handleRefField","wrapper","CanvasField_CanvasField","RedSquares_ref","defaultProps","noop","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","combineReducers","reducers","applyMiddleware","thunk","react_redux_es","RedSquares_RedSquares","App","App_ref","src_App","querySelector","module","exports"],"mappings":"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","file":"app.74ddda0a.js","sourcesContent":["export const INIT = 'INIT'\r\nexport const SET_STATE = 'SET_STATE'\r\n","const SPACE = ' '\n\nexport default class InputCatcher {\n  static instance\n\n  static mousePos = {}\n\n  static keyPressed = []\n\n  initialKeymap = {}\n\n  constructor (keymap) {\n    this.initialKeymap = keymap\n\n    if (InputCatcher.instance) {\n      return InputCatcher.instance\n    }\n    InputCatcher.instance = this\n\n    document.onmousemove = this.saveMousePos\n    window.document.addEventListener('keydown', this.process)\n  }\n\n  saveMousePos = (e) => {\n    InputCatcher.mousePos = {\n      x: e.pageX,\n      y: e.pageY,\n    }\n  }\n\n  process = (e) => {\n    if (e.key === SPACE) {\n      e.preventDefault()\n    }\n    this.saveKeyPressed(e)\n  }\n\n  saveKeyPressed = ({ keyCode }) => {\n    InputCatcher.keyPressed.push(keyCode)\n  }\n\n  reactToKeys = (keymap = this.initialKeymap) => {\n    InputCatcher.keyPressed.forEach((key) => keymap[key] && keymap[key]())\n    InputCatcher.keyPressed = []\n  }\n}\n","import InputCatcher from '../utils/InputCatcher'\n\nexport default function (data) {\n  const fieldSize = data.game.redSquares.getFieldSize()\n\n  return {\n    x: InputCatcher.mousePos.x - fieldSize.left,\n    y: InputCatcher.mousePos.y - fieldSize.top,\n  }\n}\n","export default function (state) {\n  return state.hero\n    ? {\n      x: state.hero.x,\n      y: state.hero.y,\n    }\n    : {\n      x: 0,\n      y: 0,\n    }\n}\n","function getRandomCoordinate (range, size) {\n  return (Math.random() * (range - (size * 2))) + size\n}\n\nlet target\n\nexport default function (state) {\n  if (!target || (state.hero.x === target.x && state.hero.y === target.y)) {\n    target = {\n      x: getRandomCoordinate(state.game.fieldWidth, state.hero.size),\n      y: getRandomCoordinate(state.game.fieldHeight, state.hero.size),\n    }\n  }\n\n  return target\n}\n","import { HIGHEST_BEATS } from '../constants/game'\n\nexport function isNaNumber (num) {\n  return Number.isNaN(parseFloat(num))\n}\n\nexport function sign (num) {\n  if (num === 0 || isNaNumber(num)) {\n    return num\n  }\n\n  return num > 0 ? 1 : -1\n}\n\nexport const defaultHeroPosition = (game, size) => ({\n  x: (game.fieldWidth - size) / 2,\n  y: (game.fieldHeight - size) / 2,\n})\n\nexport function saveHighestScore (score) {\n  localStorage.setItem(\n    HIGHEST_BEATS,\n    score,\n  )\n}\n\nexport function getHighestScore () {\n  const score = localStorage[HIGHEST_BEATS]\n  return score ? parseInt(score, 10) : 0\n}\n\nexport function removeHighestScore () {\n  localStorage.removeItem(HIGHEST_BEATS)\n}\n","export const SCARY_INTERVAL = 4 / 3\nexport const VARIANTS_QUANTITY = 24\n\nconst getDistance = (A, B) => Math.sqrt(((A.x - B.x) ** 2) + ((A.y - B.y) ** 2))\n\nexport const getNearest = ({ x, y }, threats) => threats.reduce((nearest, threat) => {\n  const distance = getDistance({ x, y }, threat)\n  if (!nearest.threat || nearest.distance > distance) {\n    return {\n      threat,\n      distance,\n    }\n  }\n\n  return nearest\n}, {\n  threat: null,\n  distance: Infinity,\n})\n\nexport const getSafeInterval = (hero, threats) => (\n  hero.size + threats.size + hero.maxSpeed + threats.maxSpeed\n) * SCARY_INTERVAL\n\nexport function getScaryEdges (hero, size, width, height) {\n  const edges = []\n  const { x, y } = hero\n\n  edges.push({\n    x,\n    y: -size * 1.1,\n  })\n  edges.push({\n    x,\n    y: height + (size * 1.1),\n  })\n\n  edges.push({\n    x: -size * 1.1,\n    y,\n  })\n  edges.push({\n    x: width + (size * 1.1),\n    y,\n  })\n\n  return edges\n}\n\nexport function getVariants (hero) {\n  const variants = []\n  for (let angle = 0; angle < Math.PI * 2; angle += (Math.PI * 2) / VARIANTS_QUANTITY) {\n    variants.push({\n      x: hero.x + (Math.cos(angle) * hero.maxSpeed),\n      y: hero.y + (Math.sin(angle) * hero.maxSpeed),\n    })\n  }\n\n  return variants\n}\n","import _ from 'lodash'\nimport { defaultHeroPosition } from '../utils/funcs'\nimport { getNearest, getSafeInterval, getScaryEdges } from './common'\n\nexport default function ({ game, hero, threats }) {\n  const scaryEdges = getScaryEdges(hero, 2 * threats.size, game.fieldWidth, game.fieldHeight)\n\n  const nearestThreat = getNearest(hero, _.extend(scaryEdges, threats.threats))\n\n  if (!nearestThreat.threat || nearestThreat.distance > getSafeInterval(hero, threats) * 2) {\n    return defaultHeroPosition(game, hero.size)\n  }\n\n  const distance = {\n    x: hero.x - nearestThreat.threat.x,\n    y: hero.y - nearestThreat.threat.y,\n  }\n\n  return {\n    x: hero.x + distance.x,\n    y: hero.y + distance.y,\n  }\n}\n","import _ from 'lodash'\nimport { defaultHeroPosition } from '../utils/funcs'\nimport { getNearest, getSafeInterval, getScaryEdges, getVariants } from './common'\n\nexport default function ({ game, hero, threats }) {\n  const scaryEdges = getScaryEdges(hero, 2 * threats.size, game.fieldWidth, game.fieldHeight)\n  const newThreats = threats.threats.map((threat) => (\n    {\n      x: threat.x + threat.speed.x,\n      y: threat.y + threat.speed.y,\n    }\n  ))\n  const extendedThreats = _.extend(scaryEdges, newThreats)\n\n  const nearestThreat = getNearest(hero, extendedThreats)\n\n  if (!nearestThreat.threat || nearestThreat.distance > getSafeInterval(hero, threats)) {\n    return defaultHeroPosition(game, hero.size)\n  }\n\n  const variant = getVariants(hero).reduce((best, current) => {\n    const { distance } = getNearest(current, extendedThreats)\n\n    if (distance > best.distance) {\n      return {\n        x: current.x,\n        y: current.y,\n        distance,\n      }\n    }\n\n    return best\n  }, {\n    x: hero.x,\n    y: hero.y,\n    distance: nearestThreat.distance,\n  })\n\n  return {\n    x: variant.x,\n    y: variant.y,\n  }\n}\n","import { getNearest, getSafeInterval, getVariants } from './common'\n\nconst setupMinDistance = (fieldWidth, fieldHeight, safe) => ({ x, y }, threats) => Math.min(\n  getNearest({ x, y }, threats).distance,\n  x + safe,\n  (fieldWidth + safe) - x,\n  y + safe,\n  (fieldHeight + safe) - y,\n)\n\nfunction getClearest (safe, fieldWidth, fieldHeight, threats) {\n  let clearest = 0\n  let xBest\n  let yBest\n  const getMinDistance = setupMinDistance(fieldWidth, fieldHeight, safe)\n\n  for (let x = safe; x < fieldWidth - safe; x += safe) {\n    for (let y = safe; y < fieldHeight - safe; y += safe) {\n      const distance = getMinDistance({ x, y }, threats)\n\n      if (distance > clearest) {\n        clearest = distance\n        xBest = x\n        yBest = y\n      }\n    }\n  }\n\n  return {\n    x: xBest,\n    y: yBest,\n  }\n}\n\nexport default function ({ game, hero, threats }) {\n  const newThreats = threats.threats.map((threat) => ({\n    x: threat.x + threat.speed.x,\n    y: threat.y + threat.speed.y,\n  }))\n\n  const safe = hero.size + threats.size\n  const getMinDistance = setupMinDistance(game.fieldWidth, game.fieldHeight, safe)\n  const nearest = getMinDistance(hero, newThreats)\n\n  if (nearest > getSafeInterval(hero, threats)) {\n    return getClearest(safe, game.fieldWidth, game.fieldHeight, newThreats)\n  }\n\n  const variant = getVariants(hero).reduce((best, current) => {\n    const distance = getMinDistance(current, newThreats)\n\n    if (distance > best.distance) {\n      return {\n        x: current.x,\n        y: current.y,\n        distance,\n      }\n    }\n\n    return best\n  }, {\n    x: hero.x,\n    y: hero.y,\n    distance: nearest,\n  })\n\n  return {\n    x: variant.x,\n    y: variant.y,\n  }\n}\n","import _ from 'lodash'\nimport * as managers from '../controllers'\n\nexport const SPEEDS = {\n  Normal: 'Normal',\n  Fast: 'Fast',\n  Faster: 'Faster',\n}\n\nexport const DEFAULTS = {\n  frameLength: 30,\n  fieldWidth: 800,\n  fieldHeight: 600,\n  sideWidth: 200,\n  shadowPeriod: 1,\n  shadowQuantity: 50,\n  speed: SPEEDS.Fast,\n  manager: _.findKey(managers, (f) => f === managers.Traveller),\n  heroSize: 25,\n  heroSpeed: 10,\n  threatSize: 15,\n  threatSpeed: 4,\n  threatLimit: 20,\n  threatAddTimeout: 1000,\n  threatRemoveProbability: 5,\n}\n\nexport const IDS = {\n  autoRestart: 'game.autoRestart',\n  speed: 'game.speed',\n  manager: 'game.manager',\n  heroSize: 'hero.size',\n  heroSpeed: 'hero.maxSpeed',\n  threatSize: 'threats.size',\n  threatSpeed: 'threats.maxSpeed',\n  threatLimit: 'threats.limit',\n  threatAddTimeout: 'threats.addTimeout',\n  threatRemoveProbability: 'threats.removeProbability',\n}\n\nexport const HIGHEST_BEATS = 'highestBeats'\n\nexport const GAME_STATUS = {\n  play: 'play',\n  pause: 'pause',\n  stop: 'stop',\n}\n\nexport const BUTTON_NAMES = {\n  [GAME_STATUS.play]: 'Pause',\n  [GAME_STATUS.pause]: 'Resume',\n  [GAME_STATUS.stop]: 'Start',\n}\n\nexport const KEY_CODES = {\n  space: 32,\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\nimport { DEFAULTS, GAME_STATUS } from '../constants/game'\n\nconst initialState = {\n  redSquares: null,\n  inputController: null,\n  manager: DEFAULTS.manager,\n  status: GAME_STATUS.stop,\n  autoRestart: true,\n  beats: 0,\n  highestBeats: 0,\n  outs: 0,\n  frame: 0,\n  speed: DEFAULTS.speed,\n  fieldWidth: DEFAULTS.fieldWidth,\n  fieldHeight: DEFAULTS.fieldHeight,\n  error: '',\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.INIT:\n      return _.extend({}, state, action.data)\n    case types.SET_STATE:\n      return _.extend({}, state, action.data.game)\n    default:\n      return state\n  }\n}\n","export const HERO_STATUSES = {\n  normal: 'normal',\n  trouble: 'trouble',\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\nimport { DEFAULTS } from '../constants/game'\nimport { HERO_STATUSES } from '../constants/hero'\nimport { defaultHeroPosition } from '../utils/funcs'\n\nconst initialState = {\n  ...defaultHeroPosition(DEFAULTS, DEFAULTS.heroSize),\n  maxSpeed: DEFAULTS.heroSpeed,\n  status: HERO_STATUSES.normal,\n  size: DEFAULTS.heroSize,\n  shadowPeriod: DEFAULTS.shadowPeriod,\n  shadowQuantity: DEFAULTS.shadowQuantity,\n  shadows: [],\n  target: {\n    ...defaultHeroPosition(DEFAULTS, DEFAULTS.heroSize),\n    save: '',\n  },\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.SET_STATE:\n      return _.extend({}, state, action.data.hero)\n    default:\n      return state\n  }\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\nimport { DEFAULTS } from '../constants/game'\n\nconst initialState = {\n  threats: [],\n  size: DEFAULTS.threatSize,\n  maxSpeed: DEFAULTS.threatSpeed,\n  lastTime: 0,\n  addTimeout: DEFAULTS.threatAddTimeout,\n  index: 0,\n  limit: DEFAULTS.threatLimit,\n  removeProbability: DEFAULTS.threatRemoveProbability,\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case types.SET_STATE:\n      return _.extend({}, state, action.data.threats)\n    default:\n      return state\n  }\n}\n","import { GAME_STATUS } from '../constants/game'\nimport { HERO_STATUSES } from '../constants/hero'\n\nconst getHeroStatus = (x, y, heroSize, threatSize, threats) => {\n  const safeLength = heroSize + threatSize\n\n  if (threats.some((threat) => Math.abs(threat.x - x) < safeLength && Math.abs(threat.y - y) < safeLength)) {\n    return HERO_STATUSES.trouble\n  }\n\n  return HERO_STATUSES.normal\n}\n\nfunction getMove (hero, target) {\n  const xDelta = target.x - hero.x\n  const yDelta = target.y - hero.y\n  const distance = Math.sqrt((xDelta ** 2) + (yDelta ** 2))\n\n  if (distance <= hero.maxSpeed) {\n    return {\n      xMove: xDelta,\n      yMove: yDelta,\n    }\n  }\n\n  const normalization = distance / hero.maxSpeed\n\n  return {\n    xMove: xDelta / normalization,\n    yMove: yDelta / normalization,\n  }\n}\n\nfunction getShadows ({ game, hero: { shadows, shadowPeriod, shadowQuantity, x, y } }) {\n  if (!(game.frame % shadowPeriod)) {\n    if (shadows.length === shadowQuantity) {\n      shadows.pop()\n    }\n\n    shadows.unshift({\n      x,\n      y,\n      id: shadows.length ? shadows[0].id + 1 : 0,\n    })\n  }\n\n  return shadows\n}\n\nexport function moveHero (state) {\n  const { game, hero, threats: { threats } } = state\n  const threatSize = state.threats.size\n\n  const { xMove, yMove } = getMove(hero, hero.target)\n\n  let x = hero.x + xMove\n  x = Math.max(x, hero.size)\n  x = Math.min(x, game.fieldWidth - hero.size)\n\n  let y = hero.y + yMove\n  y = Math.max(y, hero.size)\n  y = Math.min(y, game.fieldHeight - hero.size)\n\n  const status = getHeroStatus(x, y, hero.size, threatSize, threats)\n\n  return {\n    ...state,\n    game: {\n      ...state.game,\n      status: status === HERO_STATUSES.normal ? GAME_STATUS.play : GAME_STATUS.stop,\n    },\n    hero: {\n      ...state.hero,\n      x,\n      y,\n      status,\n      shadows: getShadows(state),\n    },\n  }\n}\n","import _ from 'lodash'\nimport { sign } from '../utils/funcs'\nimport { DEFAULTS } from '../constants/game'\n\nconst processSpeed = (threat, size, canFlyAway) => (axis, lean) => {\n  const updatedThreat = { ...threat }\n\n  updatedThreat.isGoingOut = sign(lean) === sign(updatedThreat.speed[axis])\n\n  if (!updatedThreat.isOut) {\n    if (canFlyAway && updatedThreat.isGoingOut) {\n      updatedThreat.isOut = true\n    } else {\n      updatedThreat.speed[axis] = (updatedThreat.isGoingOut ? -1 : 1) * (updatedThreat.speed[axis] || 1)\n    }\n  }\n  if (Math.abs(lean) > size * 3) {\n    updatedThreat.isAroundField = false\n  }\n\n  return updatedThreat\n}\n\nconst beat = (\n  removeProbability,\n  size,\n  fieldWidth,\n  fieldHeight,\n) => (threat) => {\n  let newThreat = { ...threat }\n  const canFlyAway = Math.random() < 1 / removeProbability\n  const processThreat = processSpeed(newThreat, size, canFlyAway)\n\n  const leftBorder = size\n  if (newThreat.x < leftBorder) {\n    newThreat = processThreat('x', newThreat.x - leftBorder)\n  }\n  const rightBorder = fieldWidth - size\n  if (newThreat.x > rightBorder) {\n    newThreat = processThreat('x', newThreat.x - rightBorder)\n  }\n\n  const topBorder = size\n  if (newThreat.y < topBorder) {\n    newThreat = processThreat('y', newThreat.y - topBorder)\n  }\n  const bottomBorder = fieldHeight - size\n  if (newThreat.y > bottomBorder) {\n    newThreat = processThreat('y', newThreat.y - bottomBorder)\n  }\n\n  return newThreat\n}\n\nconst newThreat = (size, index, fieldWidth, fieldHeight, maxSpeed) => {\n  const lean = size * 2\n  let x = Math.round(Math.random() * (fieldWidth - lean))\n  let y = 0 - lean\n  let speed = {\n    x: Math.round(((Math.random() * 2) - 1) * maxSpeed),\n    y: Math.ceil(Math.random() * maxSpeed),\n  }\n\n  if (Math.random() < 0.5) {\n    x = 0 - lean\n    y = Math.round(Math.random() * (fieldHeight - lean))\n    speed = {\n      x: Math.ceil(Math.random() * maxSpeed),\n      y: Math.round(((Math.random() * 2) - 1) * maxSpeed),\n    }\n\n    if (Math.random() < 0.5) {\n      x = fieldWidth\n      speed.x *= -1\n    }\n  } else if (Math.random() < 0.5) {\n    y = fieldHeight\n    speed.y *= -1\n  }\n  return {\n    id: index,\n    x,\n    y,\n    speed,\n    isOut: false,\n    isAroundField: true,\n  }\n}\n\nfunction moveThreats ({ threats, removeProbability, size }, fieldWidth, fieldHeight) {\n  return threats\n    .map((threat) => ({\n      ...threat,\n      x: threat.x + threat.speed.x,\n      y: threat.y + threat.speed.y,\n    }))\n    .map(beat(\n      removeProbability,\n      size,\n      fieldWidth,\n      fieldHeight,\n    ))\n    .filter((threat) => threat.isAroundField)\n}\n\nfunction beatThreats (newThreats) {\n  let beats = 0\n\n  return {\n    beatenThreats: newThreats.map((threat) => {\n      const updatedThreat = { ...threat }\n\n      if (updatedThreat.isGoingOut && !updatedThreat.isOut) {\n        beats += 1\n        delete updatedThreat.isGoingOut\n      }\n      return updatedThreat\n    }, 0),\n    beats,\n  }\n}\n\nfunction addThreats ({ newThreats, threats, frame, fieldWidth, fieldHeight, frameLength }) {\n  const addedThreats = [...newThreats]\n  let isAdded = false\n  if (newThreats.length < threats.limit && frame >= threats.lastTime + (threats.addTimeout / frameLength)) {\n    addedThreats.push(newThreat(\n      threats.size,\n      threats.index,\n      fieldWidth,\n      fieldHeight,\n      threats.maxSpeed,\n    ))\n    isAdded = true\n  }\n  return { addedThreats, isAdded }\n}\n\nexport function controlThreats (state) {\n  const { threats, game: { frame, fieldWidth, fieldHeight } } = state\n  const { frameLength } = DEFAULTS\n\n  let newThreats = moveThreats(threats, fieldWidth, fieldHeight)\n  const outs = threats.threats.length - newThreats.length\n\n  const { beatenThreats, beats } = beatThreats(newThreats)\n  newThreats = beatenThreats\n\n  const { addedThreats, isAdded } = addThreats(\n    { newThreats, threats, frame, fieldWidth, fieldHeight, frameLength },\n  )\n  newThreats = addedThreats\n\n  const newState = _.merge({}, state, {\n    game: {\n      beats: state.game.beats + beats,\n      outs: state.game.outs + outs,\n    },\n    threats: isAdded\n      ? {\n        lastTime: frame,\n        index: threats.index + 1,\n      }\n      : threats,\n  })\n\n  newState.threats.threats = newThreats\n\n  return newState\n}\n","import _ from 'lodash'\nimport { compose } from 'redux'\nimport * as managers from '../controllers'\nimport { DEFAULTS, GAME_STATUS, KEY_CODES } from '../constants/game'\nimport { defaultHeroPosition, isNaNumber } from '../utils/funcs'\nimport { moveHero } from './hero'\nimport { controlThreats } from './threats'\n\nconst statusUpdate = (state, status) => _.merge({}, state, {\n  game: {\n    status,\n  },\n})\n\nexport function spacePress (state) {\n  switch (state.game.status) {\n    case GAME_STATUS.play:\n      return statusUpdate(state, GAME_STATUS.pause)\n    case GAME_STATUS.pause:\n      return statusUpdate(state, GAME_STATUS.play)\n    case GAME_STATUS.stop:\n    default:\n      // we use spread because of need to rewrite (not merge) threats\n      return {\n        ...state,\n        game: {\n          ...state.game,\n          status: GAME_STATUS.play,\n          beats: 0,\n          outs: 0,\n          frame: 0,\n          error: '',\n        },\n        hero: {\n          ...state.hero,\n          ...defaultHeroPosition(state.game, state.hero.size),\n        },\n        threats: {\n          ...state.threats,\n          threats: [],\n          lastTime: -state.threats.addTimeout / DEFAULTS.frameLength,\n        },\n      }\n  }\n}\n\nfunction callManager (oldState) {\n  const state = _.merge({}, oldState, {\n    hero: {\n      target: managers[oldState.game.manager](oldState),\n    },\n  })\n  if (isNaNumber(state.hero.target.x) || isNaNumber(state.hero.target.y)) {\n    state.game.error = 'Bad target'\n    state.hero.target = {\n      ...state.hero.target,\n      x: state.hero.x,\n      y: state.hero.y,\n    }\n  }\n\n  return state\n}\n\nfunction reactToKeys (oldState) {\n  let state = { ...oldState }\n\n  if (state.game.status === GAME_STATUS.stop && state.game.autoRestart) {\n    state = callManager(state)\n    state = spacePress(state)\n  } else {\n    state.game.inputController.reactToKeys({\n      [KEY_CODES.space]: () => {\n        state = spacePress(state)\n      },\n    })\n  }\n\n  return state\n}\n\nconst nextPlayFrame = compose(controlThreats, callManager, moveHero)\n\nexport function gameStateUpdater (oldState) {\n  let state = reactToKeys(oldState)\n\n  if (state.game.status === GAME_STATUS.play) {\n    state = nextPlayFrame(state)\n    state.game.frame += 1\n  }\n\n  return state\n}\n","import * as types from '../constants/actionTypes'\nimport { DEFAULTS, GAME_STATUS, SPEEDS } from '../constants/game'\nimport InputCatcher from '../utils/InputCatcher'\nimport { gameStateUpdater, spacePress } from '../game-logic'\nimport { getHighestScore, removeHighestScore, saveHighestScore } from '../utils/funcs'\n\nexport function processSpacePress () {\n  return (dispatch, getState) => {\n    dispatch({\n      type: types.SET_STATE,\n      data: spacePress(getState()),\n    })\n  }\n}\n\nconst getWaitTime = (state, lastFrameTime) => Math.max(\n  (lastFrameTime + DEFAULTS.frameLength) - performance.now(),\n  0,\n)\n\nconst gameCycle = (initState) => {\n  const state = gameStateUpdater(initState)\n\n  if (state.game.status === GAME_STATUS.stop && initState.game.status === GAME_STATUS.play) {\n    state.game.highestBeats = Math.max(state.game.beats, state.game.highestBeats)\n    saveHighestScore(state.game.highestBeats)\n  }\n\n  return state\n}\n\nfunction updateFrame (dispatch, getState, lastFrameTime) {\n  return () => {\n    const initState = getState()\n    let state = gameCycle(initState)\n\n    if (state.game.speed === SPEEDS.Faster) {\n      for (let i = 1; i <= 100; i += 1) {\n        state = gameCycle(state)\n      }\n    }\n\n    if (state.game.status === GAME_STATUS.play || initState.game.status === GAME_STATUS.play) {\n      dispatch({\n        type: types.SET_STATE,\n        data: state,\n      })\n    }\n\n    setTimeout(\n      updateFrame(dispatch, getState, performance.now()),\n      state.game.speed === SPEEDS.Normal ? getWaitTime(state, lastFrameTime) : 0,\n    )\n  }\n}\n\nexport function clearHighest () {\n  return (dispatch) => {\n    removeHighestScore()\n\n    dispatch({\n      type: types.INIT,\n      data: {\n        highestBeats: 0,\n      },\n    })\n  }\n}\n\nexport function init (redSquares) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: types.INIT,\n      data: {\n        redSquares,\n        inputController: new InputCatcher(),\n        highestBeats: getHighestScore(),\n      },\n    })\n\n    updateFrame(dispatch, getState)()\n  }\n}\n","import _ from 'lodash'\nimport * as types from '../constants/actionTypes'\n\nexport const setState = (name, value) => ({\n  type: types.SET_STATE,\n  data: _.set({}, name, value),\n})\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport { HERO_STATUSES } from '../constants/hero'\nimport style from './RedSquares.less'\n\nconst heroStyle = {\n  [HERO_STATUSES.normal]: 'rgb(50, 205, 50)',\n  [HERO_STATUSES.trouble]: 'rgb(237, 20, 61)',\n}\n\n@connect(\n  (state) => ({\n    fieldWidth: state.game.fieldWidth,\n    fieldHeight: state.game.fieldHeight,\n    heroStatus: state.hero.status,\n    heroSize: state.hero.size,\n    heroPos: {\n      x: state.hero.x,\n      y: state.hero.y,\n    },\n    threatSize: state.threats.size,\n    threats: state.threats.threats,\n    shadows: state.hero.shadows,\n    error: state.game.error,\n  }),\n)\nexport default class CanvasField extends React.PureComponent {\n  static propTypes = {\n    fieldWidth: PropTypes.number.isRequired,\n    fieldHeight: PropTypes.number.isRequired,\n    heroStatus: PropTypes.oneOf(_.values(HERO_STATUSES)).isRequired,\n    heroSize: PropTypes.number.isRequired,\n    heroPos: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n    }).isRequired,\n    threatSize: PropTypes.number.isRequired,\n    threats: PropTypes.arrayOf(PropTypes.object).isRequired,\n    shadows: PropTypes.arrayOf(PropTypes.object).isRequired,\n    error: PropTypes.string.isRequired,\n    refHandler: PropTypes.func.isRequired,\n  }\n\n  canvas = null\n\n  componentDidMount () {\n    this.paint()\n  }\n\n  componentDidUpdate () {\n    this.paint()\n  }\n\n  clear = () => {\n    this.canvas.clearRect(0, 0, this.props.fieldWidth, this.props.fieldHeight)\n  }\n\n  drawSquare = ({ pos, size, color }) => {\n    this.canvas.fillStyle = color\n    this.canvas.fillRect(\n      Math.round(pos.x - size),\n      Math.round(pos.y - size),\n      size * 2,\n      size * 2,\n    )\n  }\n\n  paint = () => {\n    this.clear()\n\n    this.props.shadows.forEach((shadow, index) => this.drawSquare({\n      pos: this.props.shadows[index],\n      size: this.props.heroSize,\n      color: `rgba(237, 20, 61, ${((this.props.shadows.length - index - 1) / this.props.shadows.length) * 0.2})`,\n    }))\n    this.drawSquare({\n      pos: this.props.heroPos,\n      size: this.props.heroSize,\n      color: heroStyle[this.props.heroStatus],\n    })\n    this.props.threats.forEach((threat) => (\n      this.drawSquare({\n        pos: threat,\n        size: this.props.threatSize,\n        color: 'rgb(100, 149, 237)',\n      })\n    ))\n  }\n\n  handleRefCanvas = (elem) => {\n    this.canvas = elem.getContext('2d')\n    this.props.refHandler(elem)\n  }\n\n  render () {\n    return (\n      <div className={style.fieldWrapper}>\n        <canvas\n          className={style.field}\n          ref={this.handleRefCanvas}\n          width={this.props.fieldWidth}\n          height={this.props.fieldHeight}\n        >\n          {'You are using an outdated browser.'}\n        </canvas>\n        <div className={style.error}>{this.props.error}</div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport _ from 'lodash'\nimport { Check, Connector, Input, Radio } from 'state-control'\nimport * as actions from '../actions'\nimport * as managers from '../controllers'\nimport { BUTTON_NAMES, DEFAULTS, GAME_STATUS, IDS, SPEEDS } from '../constants/game'\nimport style from './RedSquares.less'\n\nconst extendConnection = (props, ids) => (state) => _.extend(\n  props(state),\n  _.mapValues(ids, (id) => _.get(state, id)),\n)\n\nconst mapStateToIds = (state, ids) => _.mapValues(_.invert(ids), (id) => state[id])\n\n@connect(\n  extendConnection((state) => ({\n    status: state.game.status,\n    beats: state.game.beats,\n    highestBeats: state.game.highestBeats,\n    outs: state.game.outs,\n    threatsLength: state.threats.threats.length,\n    manager: state.game.manager,\n  }), IDS),\n  (dispatch) => bindActionCreators({\n    processSpacePress: actions.game.processSpacePress,\n    setState: actions.params.setState,\n    clearHighest: actions.game.clearHighest,\n  }, dispatch),\n)\nexport default class Sidebar extends React.Component {\n  static propTypes = {\n    status: PropTypes.oneOf(_.values(GAME_STATUS)).isRequired,\n    beats: PropTypes.number.isRequired,\n    highestBeats: PropTypes.number.isRequired,\n    outs: PropTypes.number.isRequired,\n    threatsLength: PropTypes.number.isRequired,\n    processSpacePress: PropTypes.func.isRequired,\n    setState: PropTypes.func.isRequired,\n    clearHighest: PropTypes.func.isRequired,\n  }\n\n  changeHandler = this.props.setState\n\n  getS = (name, num) => `${num || 'No'} ${name}${num !== 1 ? 's' : ''}`\n\n  render () {\n    return (\n      <div className={style.side} style={{ width: `${DEFAULTS.sideWidth}px` }}>\n        <button type=\"button\" onClick={this.props.processSpacePress}>{BUTTON_NAMES[this.props.status]}</button>\n        {' (Press Space)'}\n        <h2>{this.getS('beat', this.props.beats)}</h2>\n        <p>\n          {'Highest beats: '}\n          {this.props.highestBeats}\n        </p>\n        <p>{this.getS('out', this.props.outs)}</p>\n        <p>\n          {this.getS('threat', this.props.threatsLength)}\n          {' on field'}\n        </p>\n\n        <Connector\n          state={mapStateToIds(this.props, IDS)}\n          onChange={this.changeHandler}\n          defaultNum={1}\n        >\n          <Check\n            id={IDS.autoRestart}\n            label=\"Auto restart\"\n          />\n          <Radio\n            id={IDS.speed}\n            label=\"Speed\"\n            values={_.keys(SPEEDS)}\n          />\n          <Radio\n            id={IDS.manager}\n            label=\"Control\"\n            values={_.keys(managers)}\n          />\n          <Input\n            id={IDS.heroSize}\n            label=\"Hero size (px)\"\n          />\n          <Input\n            id={IDS.heroSpeed}\n            label=\"Hero max speed (px/s)\"\n          />\n          <Input\n            id={IDS.threatSize}\n            label=\"Threat size (px)\"\n          />\n          <Input\n            id={IDS.threatSpeed}\n            label=\"Threat max speed (px/s)\"\n          />\n          <Input\n            id={IDS.threatLimit}\n            label=\"Threat limit\"\n          />\n          <Input\n            id={IDS.threatAddTimeout}\n            label=\"Threat add timeout (ms)\"\n          />\n          <Input\n            id={IDS.threatRemoveProbability}\n            label=\"Threat remove probability (1/x)\"\n          />\n        </Connector>\n        <button type=\"button\" onClick={this.props.clearHighest}>Clear highest</button>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport _ from 'lodash'\nimport * as actions from '../actions'\nimport { DEFAULTS } from '../constants/game'\nimport style from './RedSquares.less'\nimport CanvasField from './CanvasField'\nimport Sidebar from './Sidebar'\n\n@connect(\n  (state) => ({\n    fieldWidth: state.game.fieldWidth,\n  }),\n  (dispatch) => bindActionCreators({\n    init: actions.game.init,\n  }, dispatch),\n)\nexport default class RedSquares extends React.Component {\n  static propTypes = {\n    fieldWidth: PropTypes.number,\n    init: PropTypes.func,\n  }\n\n  static defaultProps = {\n    fieldWidth: 800,\n    init: _.noop,\n  }\n\n  componentDidMount () {\n    this.props.init(this)\n  }\n\n  getFieldSize = () => {\n    const fieldRect = this.field\n\n    return {\n      left: fieldRect.offsetLeft,\n      top: fieldRect.offsetTop,\n      right: fieldRect.offsetLeft + fieldRect.clientWidth,\n      bottom: fieldRect.offsetTop + fieldRect.clientHeight,\n    }\n  }\n\n  handleRefField = (elem) => {\n    this.field = elem\n  }\n\n  render () {\n    return (\n      <div className={style.wrapper} style={{ width: `${this.props.fieldWidth + DEFAULTS.sideWidth}px` }}>\n        <CanvasField refHandler={this.handleRefField} />\n        <Sidebar />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport * as reducers from './reducers'\nimport RedSquares from './components/RedSquares'\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(combineReducers(reducers), composeEnhancers(applyMiddleware(thunk)))\n\nconst App = () => (\n  <Provider store={store}>\n    <RedSquares />\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nrender(<App />, document.querySelector('#app'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RedSquares__wrapper__n469N\",\"fieldWrapper\":\"RedSquares__fieldWrapper__3xRFe\",\"field\":\"RedSquares__field__3S_U-\",\"error\":\"RedSquares__error__32Ynw\",\"side\":\"RedSquares__side__1Qama\"};"],"sourceRoot":""}